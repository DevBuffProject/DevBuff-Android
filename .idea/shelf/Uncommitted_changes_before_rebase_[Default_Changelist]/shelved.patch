Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/models/RequirementsModel.kt
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/RequirementsModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/RequirementsModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/RequirementsModel.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ /dev/null	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
@@ -1,13 +0,0 @@
-package com.github.bgrebennikov.devbuff.data.models
-
-import com.google.gson.annotations.SerializedName
-
-data class RequirementsModel(
-
-    @SerializedName("name")
-    val name: String,
-
-    @SerializedName("languages")
-    val languages : List<LanguagesModel>
-
-)
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/models/TechnologiesModel.kt
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/TechnologiesModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/TechnologiesModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/TechnologiesModel.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ /dev/null	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
@@ -1,8 +0,0 @@
-package com.github.bgrebennikov.devbuff.data.models
-
-import com.google.gson.annotations.SerializedName
-
-data class TechnologiesModel(
-    @SerializedName("name")
-    val name: String,
-)
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/models/LanguagesModel.kt
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/LanguagesModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/LanguagesModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/LanguagesModel.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ /dev/null	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
@@ -1,12 +0,0 @@
-package com.github.bgrebennikov.devbuff.data.models
-
-import com.google.gson.annotations.SerializedName
-
-data class LanguagesModel(
-
-    @SerializedName("name")
-    val name: String,
-
-    @SerializedName("technologies")
-    val technologies: List<TechnologiesModel>,
-)
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
deleted file mode 100644
--- a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ /dev/null	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
-</adaptive-icon>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/ApiService.kt
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/ApiService.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/ApiService.kt
deleted file mode 100644
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/data/ApiService.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ /dev/null	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
@@ -1,15 +0,0 @@
-package com.github.bgrebennikov.devbuff.data
-
-import com.github.bgrebennikov.devbuff.data.models.IdeaModel
-import com.github.bgrebennikov.devbuff.data.models.IdeasResponse
-import retrofit2.http.GET
-import retrofit2.http.Query
-
-interface ApiService {
-
-    @GET("idea/?sortBy=lastUpdate")
-    suspend fun getIdeas(
-        @Query("page") page : Int
-    ) : IdeasResponse
-
-}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/ExploreViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.viewModels\n\nimport android.util.Log\nimport androidx.lifecycle.LiveData\nimport androidx.lifecycle.MutableLiveData\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.github.bgrebennikov.devbuff.common.TAG\nimport com.github.bgrebennikov.devbuff.data.models.IdeaModel\nimport com.github.bgrebennikov.devbuff.domain.useCases.GetIdeasUseCase\nimport com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.IdeaPostProgress\nimport com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.delay\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\nimport javax.inject.Singleton\n\n@Singleton\nclass ExploreViewModel @Inject constructor(\n    private val getIdeasUseCase: GetIdeasUseCase\n) : ViewModel() {\n\n    private val _ideas = MutableLiveData<List<ListItem>>()\n    val ideas : LiveData<List<ListItem>> get() = _ideas\n\n    init {\n        _ideas.value = IntRange(0, 3).map{\n            IdeaPostProgress\n        }\n        loadIdeas(1)\n\n    }\n\n    private fun loadIdeas(page : Int){\n        viewModelScope.launch(Dispatchers.IO) {\n            _ideas.postValue(getIdeasUseCase.invoke(page))\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/ExploreViewModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/ExploreViewModel.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/ExploreViewModel.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/ExploreViewModel.kt	(date 1647771172680)
@@ -1,13 +1,15 @@
 package com.github.bgrebennikov.devbuff.presentation.viewModels
 
 import android.util.Log
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.MutableLiveData
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.viewModelScope
+import androidx.lifecycle.*
 import com.github.bgrebennikov.devbuff.common.TAG
-import com.github.bgrebennikov.devbuff.data.models.IdeaModel
+import com.github.bgrebennikov.devbuff.data.ApiResponse
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreHelper
+import com.github.bgrebennikov.devbuff.data.local.Status
+import com.github.bgrebennikov.devbuff.data.remote.models.explore.IdeaDetailsModel
+import com.github.bgrebennikov.devbuff.domain.useCases.GetIdeaByIdUseCase
 import com.github.bgrebennikov.devbuff.domain.useCases.GetIdeasUseCase
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.HeaderItemModel
 import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.IdeaPostProgress
 import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
 import kotlinx.coroutines.Dispatchers
@@ -15,27 +17,140 @@
 import kotlinx.coroutines.launch
 import javax.inject.Inject
 import javax.inject.Singleton
+import kotlin.random.Random
 
 @Singleton
 class ExploreViewModel @Inject constructor(
-    private val getIdeasUseCase: GetIdeasUseCase
+    private val getIdeasUseCase: GetIdeasUseCase,
+    private val getIdeaByIdUseCase: GetIdeaByIdUseCase,
+    private val dsHelper: DataStoreHelper
 ) : ViewModel() {
 
-    private val _ideas = MutableLiveData<List<ListItem>>()
-    val ideas : LiveData<List<ListItem>> get() = _ideas
+    private val _ideas = MutableLiveData<ApiResponse<List<ListItem>>>()
+    val ideas : LiveData<ApiResponse<List<ListItem>>> get() = _ideas
+
+
+    private val _singleIdea = MutableLiveData<ApiResponse<IdeaDetailsModel>>()
+    val singleIdea : LiveData<ApiResponse<IdeaDetailsModel>> get() = _singleIdea
 
     init {
-        _ideas.value = IntRange(0, 3).map{
-            IdeaPostProgress
-        }
+
         loadIdeas(1)
+//        dsHelper.setAccessToken("e4e39c7b-4e15-4ebf-b66b-3c802c92b224")
 
     }
 
     private fun loadIdeas(page : Int){
         viewModelScope.launch(Dispatchers.IO) {
-            _ideas.postValue(getIdeasUseCase.invoke(page))
+            _ideas.postValue(ApiResponse.loading(
+                data = IntRange(0, 3).map {
+                    IdeaPostProgress
+                }
+            ))
+
+            try{
+
+                val response = getIdeasUseCase.invoke(page)
+
+                val items = mutableListOf<ListItem>(
+                    HeaderItemModel("Explore"),
+                )
+                items.addAll(response)
+                _ideas.postValue(
+                    ApiResponse.success(items)
+                )
+            } catch (e : Exception){
+                e.printStackTrace()
+                _ideas.postValue(ApiResponse.error(
+                    message = e.message ?: "Error loading ideas",
+                    data = null
+                ))
+            }
+
         }
     }
+
+//    fun loadSingleIdea(_id: String){
+//
+//        Log.i(TAG, "loadSingleIdea: $this")
+//
+//        viewModelScope.launch(Dispatchers.IO) {
+//            _singleIdea.postValue(
+//                ApiResponse.loading(null)
+//            )
+//
+//            try {
+//                _singleIdea.postValue(
+//                    ApiResponse.success(
+//                        getIdeaByIdUseCase.invoke(_id)
+//                    )
+//                )
+//            } catch (e : Exception){
+//                _singleIdea.postValue(
+//                    ApiResponse.error(
+//                        data = null,
+//                        message = e.localizedMessage ?: "Error"
+//                    )
+//                )
+//                e.printStackTrace()
+//            }
+//
+//        }
+//    }
+
+    fun loadSingleIdea(_id: String) = liveData(Dispatchers.IO) {
+
+        emit(ApiResponse.loading(
+            data = null
+        ))
+
+        try{
+            emit(
+                ApiResponse.success(
+                    data = getIdeaByIdUseCase.invoke(_id)
+                )
+            )
+        } catch (e: Exception){
+            emit(
+                ApiResponse.error(
+                    data = null,
+                    message = e.localizedMessage ?: "Error Occurred!"
+                )
+            )
+            e.printStackTrace()
+        }
+
+    }
+
+
+//
+//    fun loadIdeas(page : Int) = liveData(Dispatchers.IO){
+//        emit(ApiResponse.loading(
+//            data = IntRange(0, 3).map {
+//                IdeaPostProgress
+//            }
+//        ))
+//
+//        try{
+//            emit(
+//                ApiResponse.success(
+//                    data = getIdeasUseCase.invoke(page)
+//                )
+//            )
+//        } catch (e : Exception){
+//            emit(
+//                ApiResponse.error(
+//                    data = null,
+//                    message = e.localizedMessage ?: "Error Occurred!"
+//                )
+//            )
+//        }
+//
+//    }
+
+    fun test(){
+        Log.i(TAG, "test")
+    }
+
 
 }
\ No newline at end of file
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>pluginManagement {\n    repositories {\n        gradlePluginPortal()\n        google()\n        mavenCentral()\n    }\n}\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\nrootProject.name = \"DevBuff\"\ninclude ':app'\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle b/settings.gradle
--- a/settings.gradle	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/settings.gradle	(date 1647257178562)
@@ -12,5 +12,7 @@
         mavenCentral()
     }
 }
+
+
 rootProject.name = "DevBuff"
 include ':app'
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ExploreAdapterDelegate.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore\n\nimport android.app.Activity\nimport android.util.Log\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.view.ViewCompat\nimport androidx.fragment.app.Fragment\nimport com.bumptech.glide.Glide\nimport com.bumptech.glide.load.resource.bitmap.CenterCrop\nimport com.bumptech.glide.load.resource.bitmap.RoundedCorners\nimport com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions.withCrossFade\nimport com.github.bgrebennikov.devbuff.R\nimport com.github.bgrebennikov.devbuff.common.TAG\nimport com.github.bgrebennikov.devbuff.data.models.IdeaModel\nimport com.github.bgrebennikov.devbuff.data.models.IdeasResponse\nimport com.github.bgrebennikov.devbuff.databinding.ItemIdeaBinding\nimport com.github.bgrebennikov.devbuff.databinding.ItemIdeaProgressBinding\nimport com.google.android.material.chip.Chip\nimport com.hannesdorfmann.adapterdelegates4.dsl.adapterDelegateViewBinding\nimport java.lang.Exception\n\nobject ExploreAdapterDelegate {\n\n    // put UserID to end of this string\n    private const val BASE_IMAGE_URL = \"https://api.devbuff.com/photo/profile\"\n    private const val STAGED_BASE_IMAGE_URL = \"https://api-staging.devbuff.com/photo/profile\"\n\n    fun ideaPostDelegate() =\n        adapterDelegateViewBinding<IdeaModel, ListItem, ItemIdeaBinding>(\n            { inflater, container ->\n                ItemIdeaBinding.inflate(inflater, container, false)\n            }\n        ) {\n            bind {\n                val resources = binding.root.resources\n\n                try {\n                    Glide.with(binding.root)\n                        .load(\"$STAGED_BASE_IMAGE_URL/${item.ownerIdea.id}\")\n                        .transform(\n                            CenterCrop(),\n                            RoundedCorners(\n                                resources.getDimensionPixelOffset(R.dimen.corners_radius_small)\n                            )\n                        )\n                        .transition(withCrossFade())\n                        .into(binding.ownerPhoto)\n                } catch (e: Exception) {\n\n                }\n\n                binding.ideaTitle.text = item.name\n                binding.ideaDescription.text = item.description\n                binding.ownerFullName.text = \"%s %s\".format(\n                    item.ownerIdea.firstName,\n                    item.ownerIdea.lastName\n                )\n                binding.ownerUsername.text = \"@%s\".format(\n                    item.ownerIdea.username\n                )\n\n\n                Log.i(TAG, \"ideaPostDelegate: ${item.requirements}\")\n\n\n\n\n            }\n\n\n            onViewRecycled {\n\n                binding.specialistsChipGroup.removeAllViewsInLayout()\n\n                if((binding.root.context as? Activity)?.isDestroyed?.not() == true){\n                    Glide.with(binding.root)\n                        .clear(binding.ownerPhoto)\n                }\n            }\n        }\n\n    fun ideaPostProgressDefault() =\n        adapterDelegateViewBinding<IdeaPostProgress, ListItem, ItemIdeaProgressBinding>(\n            { inflater, container ->\n                ItemIdeaProgressBinding.inflate(inflater, container, false)\n            }\n        ) {\n\n        }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ExploreAdapterDelegate.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ExploreAdapterDelegate.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ExploreAdapterDelegate.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ExploreAdapterDelegate.kt	(date 1647517803003)
@@ -1,78 +1,76 @@
 package com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore
 
 import android.app.Activity
-import android.util.Log
-import android.view.View
-import android.view.ViewGroup
-import androidx.core.view.ViewCompat
-import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.RecyclerView
 import com.bumptech.glide.Glide
-import com.bumptech.glide.load.resource.bitmap.CenterCrop
-import com.bumptech.glide.load.resource.bitmap.RoundedCorners
-import com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions.withCrossFade
-import com.github.bgrebennikov.devbuff.R
-import com.github.bgrebennikov.devbuff.common.TAG
-import com.github.bgrebennikov.devbuff.data.models.IdeaModel
-import com.github.bgrebennikov.devbuff.data.models.IdeasResponse
+import com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel
+import com.github.bgrebennikov.devbuff.data.local.SimpleIdeaRequirements
+import com.github.bgrebennikov.devbuff.data.local.SimpleLanguagesModel
+import com.github.bgrebennikov.devbuff.data.local.SimpleTechnologiesModel
+import com.github.bgrebennikov.devbuff.databinding.HeaderTitleItemBinding
+import com.github.bgrebennikov.devbuff.databinding.IdeaChipItemBinding
 import com.github.bgrebennikov.devbuff.databinding.ItemIdeaBinding
 import com.github.bgrebennikov.devbuff.databinding.ItemIdeaProgressBinding
-import com.google.android.material.chip.Chip
 import com.hannesdorfmann.adapterdelegates4.dsl.adapterDelegateViewBinding
-import java.lang.Exception
 
 object ExploreAdapterDelegate {
 
-    // put UserID to end of this string
-    private const val BASE_IMAGE_URL = "https://api.devbuff.com/photo/profile"
-    private const val STAGED_BASE_IMAGE_URL = "https://api-staging.devbuff.com/photo/profile"
 
-    fun ideaPostDelegate() =
-        adapterDelegateViewBinding<IdeaModel, ListItem, ItemIdeaBinding>(
+    fun ideaPostDelegate(onClickListener: (SimpleIdeaModel) -> Unit) =
+        adapterDelegateViewBinding<SimpleIdeaModel, ListItem, ItemIdeaBinding>(
             { inflater, container ->
                 ItemIdeaBinding.inflate(inflater, container, false)
             }
         ) {
+
+            val sharedPool = RecyclerView.RecycledViewPool()
+            sharedPool.setMaxRecycledViews(itemViewType, 1)
+
+            val specialistsItems = ChipsAdapter()
+            val technologiesItems = ChipsAdapter()
+            val languagesItems = ChipsAdapter()
+
+            with(binding){
+                specialistsChipRecycler.setRecycledViewPool(sharedPool)
+                specialistsChipRecycler.adapter = specialistsItems
+                specialistsChipRecycler.setHasFixedSize(true)
+                specialistsChipRecycler.itemAnimator = null
+                specialistsChipRecycler.setItemViewCacheSize(1024*30)
+
+                technologiesChipRecycler.setRecycledViewPool(sharedPool)
+                technologiesChipRecycler.adapter = technologiesItems
+                technologiesChipRecycler.setHasFixedSize(true)
+                technologiesChipRecycler.itemAnimator = null
+                technologiesChipRecycler.setItemViewCacheSize(1024*30)
+
+                languagesChipRecycler.setRecycledViewPool(sharedPool)
+                languagesChipRecycler.adapter = languagesItems
+                languagesChipRecycler.setHasFixedSize(true)
+                languagesChipRecycler.itemAnimator = null
+                languagesChipRecycler.setItemViewCacheSize(1024*30)
+
+            }
+
+
+
             bind {
-                val resources = binding.root.resources
-
-                try {
-                    Glide.with(binding.root)
-                        .load("$STAGED_BASE_IMAGE_URL/${item.ownerIdea.id}")
-                        .transform(
-                            CenterCrop(),
-                            RoundedCorners(
-                                resources.getDimensionPixelOffset(R.dimen.corners_radius_small)
-                            )
-                        )
-                        .transition(withCrossFade())
-                        .into(binding.ownerPhoto)
-                } catch (e: Exception) {
-
-                }
-
-                binding.ideaTitle.text = item.name
-                binding.ideaDescription.text = item.description
-                binding.ownerFullName.text = "%s %s".format(
-                    item.ownerIdea.firstName,
-                    item.ownerIdea.lastName
-                )
-                binding.ownerUsername.text = "@%s".format(
-                    item.ownerIdea.username
-                )
 
+                binding.idea = item
 
-                Log.i(TAG, "ideaPostDelegate: ${item.requirements}")
+                specialistsItems.items = item.requirements
+                technologiesItems.items = item.technologies
+                languagesItems.items = item.languages
 
+                binding.viewMoreBtn.setOnClickListener {
+                    onClickListener.invoke(item)
+                }
 
+                binding.executePendingBindings()
 
 
             }
-
 
             onViewRecycled {
-
-                binding.specialistsChipGroup.removeAllViewsInLayout()
-
                 if((binding.root.context as? Activity)?.isDestroyed?.not() == true){
                     Glide.with(binding.root)
                         .clear(binding.ownerPhoto)
@@ -80,6 +78,50 @@
             }
         }
 
+    fun headerItem() = adapterDelegateViewBinding<HeaderItemModel, ListItem, HeaderTitleItemBinding>(
+        { inflater, container ->
+            HeaderTitleItemBinding.inflate(inflater, container, false)
+        }
+    ){
+        bind {
+            binding.title = item.title
+        }
+    }
+
+    fun ideaChipItem() = adapterDelegateViewBinding<SimpleIdeaRequirements, ListItem, IdeaChipItemBinding>(
+        { inflater, container ->
+            IdeaChipItemBinding.inflate(inflater, container, false)
+        }
+    ){
+
+        bind {
+            binding.title = item.name
+            binding.executePendingBindings()
+        }
+    }
+
+    fun ideaChipLanguagesItem() = adapterDelegateViewBinding<SimpleLanguagesModel, ListItem, IdeaChipItemBinding>(
+        { inflater, container ->
+            IdeaChipItemBinding.inflate(inflater, container, false)
+        }
+    ){
+        bind {
+            binding.title = item.name
+            binding.executePendingBindings()
+        }
+    }
+
+    fun ideaChipTechnologiesItem() = adapterDelegateViewBinding<SimpleTechnologiesModel, ListItem, IdeaChipItemBinding>(
+        { inflater, container ->
+            IdeaChipItemBinding.inflate(inflater, container, false)
+        }
+    ){
+        bind {
+            binding.title = item.name
+            binding.executePendingBindings()
+        }
+    }
+
     fun ideaPostProgressDefault() =
         adapterDelegateViewBinding<IdeaPostProgress, ListItem, ItemIdeaProgressBinding>(
             { inflater, container ->
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ExploreAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore\n\nimport com.github.bgrebennikov.devbuff.presentation.ui.adapters.base.BaseDiffUtilItemCallback\nimport com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ExploreAdapterDelegate.ideaPostDelegate\nimport com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ExploreAdapterDelegate.ideaPostProgressDefault\nimport com.hannesdorfmann.adapterdelegates4.AsyncListDifferDelegationAdapter\n\nclass ExploreAdapter : AsyncListDifferDelegationAdapter<ListItem>(BaseDiffUtilItemCallback()) {\n\n    init {\n        delegatesManager\n            .addDelegate(ideaPostDelegate())\n            .addDelegate(ideaPostProgressDefault())\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ExploreAdapter.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ExploreAdapter.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ExploreAdapter.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ExploreAdapter.kt	(date 1647517803010)
@@ -1,16 +1,24 @@
 package com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore
 
 import com.github.bgrebennikov.devbuff.presentation.ui.adapters.base.BaseDiffUtilItemCallback
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ExploreAdapterDelegate.headerItem
 import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ExploreAdapterDelegate.ideaPostDelegate
 import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ExploreAdapterDelegate.ideaPostProgressDefault
+import com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.ExploreClickListener
 import com.hannesdorfmann.adapterdelegates4.AsyncListDifferDelegationAdapter
 
 class ExploreAdapter : AsyncListDifferDelegationAdapter<ListItem>(BaseDiffUtilItemCallback()) {
 
+    var listener : ExploreClickListener? = null
+
     init {
         delegatesManager
-            .addDelegate(ideaPostDelegate())
+            .addDelegate(ideaPostDelegate(){
+                listener?.onClickIdeaItem(it)
+            })
             .addDelegate(ideaPostProgressDefault())
+            .addDelegate(headerItem())
+
     }
 
 }
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ListItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore\n\ninterface ListItem {\n    val itemId: Int\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ListItem.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ListItem.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ListItem.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ListItem.kt	(date 1647339546081)
@@ -2,4 +2,7 @@
 
 interface ListItem {
     val itemId: Int
+
+
+
 }
\ No newline at end of file
Index: app/src/main/res/drawable/ic_logo.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_logo.xml b/app/src/main/res/drawable/ic_logo.xml
new file mode 100644
--- /dev/null	(date 1646836668592)
+++ b/app/src/main/res/drawable/ic_logo.xml	(date 1646836668592)
@@ -0,0 +1,21 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="45dp"
+    android:height="60dp"
+    android:viewportWidth="45"
+    android:viewportHeight="60">
+  <path
+      android:pathData="M42.0385,22.8487L8.5664,37.3658C7.5521,37.678 6.5866,37.5512 5.6698,36.9853C4.753,36.4195 4.1581,35.6097 3.885,34.5561C3.6119,33.5024 3.7387,32.4975 4.2654,31.5414C4.792,30.5853 5.5625,29.9512 6.5768,29.639L40.0489,15.1219C41.1022,14.8487 42.0775,14.9853 42.9748,15.5317C43.872,16.078 44.467,16.8878 44.7596,17.9609C45.0521,19.0341 44.9254,20.0487 44.3792,21.0048C43.833,21.9609 43.0528,22.5756 42.0385,22.8487ZM38.2934,11.6097L4.8213,26.1268C3.807,26.439 2.8414,26.3122 1.9247,25.7463C1.0079,25.1805 0.413,24.3707 0.1399,23.317C-0.1332,22.2634 -0.0064,21.2585 0.5202,20.3024C1.0469,19.3463 1.8174,18.7317 2.8317,18.4585L36.3038,3.8829C37.3571,3.6097 38.3324,3.7463 39.2296,4.2926C40.1269,4.839 40.7218,5.6487 41.0144,6.7219C41.307,7.7951 41.1802,8.8097 40.6341,9.7658C40.0879,10.7219 39.3077,11.3365 38.2934,11.6097ZM17.6952,7.8634L8.5664,11.1414C7.5521,11.4536 6.5866,11.3365 5.6698,10.7902C4.753,10.2439 4.1581,9.4341 3.885,8.3609C3.6119,7.2878 3.7387,6.2731 4.2654,5.317C4.792,4.3609 5.5625,3.7463 6.5768,3.4731L15.7641,0.1365C16.7784,-0.1366 17.7439,0 18.6607,0.5463C19.5775,1.0926 20.1724,1.9024 20.4455,2.9756C20.7186,4.0487 20.5918,5.0634 20.0651,6.0195C19.5385,6.9756 18.7485,7.5902 17.6952,7.8634ZM16.4663,37.8926C16.8564,37.5414 17.3051,37.2878 17.8122,37.1317L36.3038,30.1073C37.3571,29.8341 38.3324,29.9707 39.2296,30.517C40.1269,31.0634 40.7218,31.8731 41.0144,32.9463C41.307,34.0195 41.1802,35.0341 40.6341,35.9902C40.0879,36.9463 39.3077,37.5609 38.2934,37.8341L22.4936,43.8634C22.4546,44.3707 22.4351,44.7414 22.4351,44.9756H26.1802C27.2335,44.9756 28.1211,45.3463 28.8428,46.0878C29.5645,46.8292 29.9254,47.717 29.9254,48.7512C29.9254,49.7853 29.5645,50.6634 28.8428,51.3853C28.1211,52.1073 27.2335,52.4683 26.1802,52.4683H18.69C18.4559,52.4683 18.2218,52.4487 17.9878,52.4097C16.0762,52.2146 14.467,51.4048 13.1601,49.9805C11.8532,48.5561 11.1997,46.8878 11.1997,44.9756C11.1997,43.3365 11.6874,41.8634 12.6627,40.5561C13.638,39.2487 14.9058,38.3609 16.4663,37.8926ZM22.4351,59.9609C20.3675,59.9609 18.6022,59.6 17.1393,58.878C15.6763,58.1561 14.9449,57.2683 14.9449,56.2146H29.9254C29.9254,57.2683 29.1939,58.1561 27.7309,58.878C26.268,59.6 24.5027,59.9609 22.4351,59.9609Z">
+    <aapt:attr name="android:fillColor">
+      <gradient
+          android:startY="59.9609"
+          android:startX="22.4563"
+          android:endY="3.57395E-5"
+          android:endX="22.4563"
+          android:type="linear">
+        <item android:offset="0" android:color="#FF007CF0"/>
+        <item android:offset="1" android:color="#FF00DFD8"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+</vector>
Index: app/src/main/res/layout/item_idea.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_margin=\"@dimen/padding_default\"\n    android:padding=\"@dimen/padding_default\"\n    android:background=\"@drawable/bg_rect_rounded_white\"\n    >\n\n<!--  TODO: Remove sample author image  -->\n    <ImageView\n        android:id=\"@+id/ownerPhoto\"\n        android:layout_width=\"30dp\"\n        android:layout_height=\"30dp\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        android:scaleType=\"centerCrop\"\n        android:adjustViewBounds=\"true\"\n        android:contentDescription=\"@string/cd_idea_post_owner\"\n        android:src=\"@raw/sample_image\"\n        />\n\n    <TextView\n        android:id=\"@+id/ownerFullName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"@dimen/margin_small\"\n        android:text=\"Alexander Chapchuk\"\n        android:textColor=\"@color/black\"\n        android:textSize=\"6pt\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/ownerPhoto\"\n        app:layout_constraintStart_toEndOf=\"@+id/ownerPhoto\"\n        app:layout_constraintTop_toTopOf=\"@+id/ownerPhoto\" />\n\n    <TextView\n        android:id=\"@+id/ownerUsername\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"@dimen/margin_small\"\n        android:text=\"\\@BigTows\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/ownerPhoto\"\n        app:layout_constraintStart_toEndOf=\"@id/ownerFullName\"\n        app:layout_constraintTop_toTopOf=\"@+id/ownerPhoto\" />\n\n    <TextView\n        android:id=\"@+id/ideaTitle\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"DevBuff\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/ownerPhoto\"\n        android:textSize=\"10pt\"\n        android:textStyle=\"bold\"\n        android:textColor=\"@color/black\"\n        android:layout_marginTop=\"@dimen/margin_default\"\n        />\n\n    <TextView\n        android:id=\"@+id/ideaDescription\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/default_description_text\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/ideaTitle\"\n        android:layout_marginTop=\"@dimen/margin_small\"\n        android:textSize=\"6pt\"\n        />\n\n    <TextView\n        android:id=\"@+id/specialists\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Специалисты\"\n        app:layout_constraintTop_toBottomOf=\"@+id/ideaDescription\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:layout_marginTop=\"@dimen/margin_default\"\n        />\n\n    <com.google.android.material.chip.ChipGroup\n        android:id=\"@+id/specialists_chip_group\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/specialists\"\n        android:layout_marginTop=\"@dimen/margin_small\"\n        />\n\n    <TextView\n        android:id=\"@+id/technologies\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/technologies\"\n        app:layout_constraintTop_toBottomOf=\"@+id/specialists_chip_group\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:layout_marginTop=\"@dimen/margin_default\"\n        />\n\n    <com.google.android.material.chip.ChipGroup\n        android:id=\"@+id/technologies_chip_group\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/technologies\"\n        android:layout_marginTop=\"@dimen/margin_small\"\n        >\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Backend Developer\"\n            android:textAllCaps=\"true\"\n            />\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Java\"\n            android:textAllCaps=\"true\"\n            />\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Kotlin\"\n            android:textAllCaps=\"true\"\n            />\n\n    </com.google.android.material.chip.ChipGroup>\n\n    <TextView\n        android:id=\"@+id/languages\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/programming_languages\"\n        app:layout_constraintTop_toBottomOf=\"@+id/technologies_chip_group\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:layout_marginTop=\"@dimen/margin_default\"\n        />\n\n    <com.google.android.material.chip.ChipGroup\n        android:id=\"@+id/languages_chip_group\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/languages\"\n        android:layout_marginTop=\"@dimen/margin_small\"\n        >\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Backend Developer\"\n            android:textAllCaps=\"true\"\n            />\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Java\"\n            android:textAllCaps=\"true\"\n            />\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Kotlin\"\n            android:textAllCaps=\"true\"\n            />\n\n    </com.google.android.material.chip.ChipGroup>\n\n\n\n\n\n\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_idea.xml b/app/src/main/res/layout/item_idea.xml
--- a/app/src/main/res/layout/item_idea.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/layout/item_idea.xml	(date 1647359518919)
@@ -1,177 +1,162 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_margin="@dimen/padding_default"
-    android:padding="@dimen/padding_default"
-    android:background="@drawable/bg_rect_rounded_white"
-    >
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <data>
+        <variable
+            name="idea"
+            type="com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel" />
+    </data>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="@dimen/padding_default"
+        android:background="@drawable/bg_rect_rounded_white"
+        android:padding="@dimen/padding_default">
 
-<!--  TODO: Remove sample author image  -->
-    <ImageView
-        android:id="@+id/ownerPhoto"
-        android:layout_width="30dp"
-        android:layout_height="30dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        android:scaleType="centerCrop"
-        android:adjustViewBounds="true"
-        android:contentDescription="@string/cd_idea_post_owner"
-        android:src="@raw/sample_image"
-        />
+        <!--  TODO: Remove sample author image  -->
+        <ImageView
+            android:id="@+id/ownerPhoto"
+            android:layout_width="30dp"
+            android:layout_height="30dp"
+            android:adjustViewBounds="true"
+            android:contentDescription="@string/cd_idea_post_owner"
+            android:scaleType="centerCrop"
+            tools:src="@raw/sample_image"
+            app:profileImageFromUserID="@{idea.ownerIdea.id}"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
 
-    <TextView
-        android:id="@+id/ownerFullName"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="@dimen/margin_small"
-        android:text="Alexander Chapchuk"
-        android:textColor="@color/black"
-        android:textSize="6pt"
-        app:layout_constraintBottom_toBottomOf="@+id/ownerPhoto"
-        app:layout_constraintStart_toEndOf="@+id/ownerPhoto"
-        app:layout_constraintTop_toTopOf="@+id/ownerPhoto" />
+        <TextView
+            android:id="@+id/ownerFullName"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="@dimen/margin_small"
+            tools:text="Alexander Chapchuk"
+            app:firstName="@{idea.ownerIdea.firstName}"
+            app:lastName="@{idea.ownerIdea.lastName}"
+            android:textColor="@color/black"
+            android:textSize="6pt"
+            app:layout_constraintBottom_toBottomOf="@+id/ownerPhoto"
+            app:layout_constraintStart_toEndOf="@+id/ownerPhoto"
+            app:layout_constraintTop_toTopOf="@+id/ownerPhoto" />
 
-    <TextView
-        android:id="@+id/ownerUsername"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="@dimen/margin_small"
-        android:text="\@BigTows"
-        app:layout_constraintBottom_toBottomOf="@+id/ownerPhoto"
-        app:layout_constraintStart_toEndOf="@id/ownerFullName"
-        app:layout_constraintTop_toTopOf="@+id/ownerPhoto" />
+        <TextView
+            android:id="@+id/ownerUsername"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="@dimen/margin_small"
+            tools:text="\@BigTows"
+            app:username="@{idea.ownerIdea.username}"
+            app:layout_constraintBottom_toBottomOf="@+id/ownerPhoto"
+            app:layout_constraintStart_toEndOf="@id/ownerFullName"
+            app:layout_constraintTop_toTopOf="@+id/ownerPhoto" />
 
-    <TextView
-        android:id="@+id/ideaTitle"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="DevBuff"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/ownerPhoto"
-        android:textSize="10pt"
-        android:textStyle="bold"
-        android:textColor="@color/black"
-        android:layout_marginTop="@dimen/margin_default"
-        />
+        <TextView
+            android:id="@+id/ideaTitle"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_default"
+            tools:text="DevBuff"
+            android:text="@{idea.name}"
+            android:textColor="@color/black"
+            android:textSize="10pt"
+            android:textStyle="bold"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/ownerPhoto" />
 
-    <TextView
-        android:id="@+id/ideaDescription"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/default_description_text"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/ideaTitle"
-        android:layout_marginTop="@dimen/margin_small"
-        android:textSize="6pt"
-        />
+        <TextView
+            android:id="@+id/ideaDescription"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_small"
+            tools:text="@string/default_description_text"
+            android:text="@{idea.description}"
+            android:textSize="6pt"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/ideaTitle" />
 
-    <TextView
-        android:id="@+id/specialists"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="Специалисты"
-        app:layout_constraintTop_toBottomOf="@+id/ideaDescription"
-        app:layout_constraintStart_toStartOf="parent"
-        android:layout_marginTop="@dimen/margin_default"
-        />
+        <TextView
+            android:id="@+id/specialists"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_default"
+            android:text="@string/specialists"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/ideaDescription" />
 
-    <com.google.android.material.chip.ChipGroup
-        android:id="@+id/specialists_chip_group"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/specialists"
-        android:layout_marginTop="@dimen/margin_small"
-        />
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/specialists_chip_recycler"
+            android:layoutDirection="ltr"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/specialists"
+            app:layoutManager="com.google.android.flexbox.FlexboxLayoutManager"
+            android:orientation="horizontal"
+            tools:itemCount="3"
+            tools:listitem="@layout/idea_chip_item" />
+
 
-    <TextView
-        android:id="@+id/technologies"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/technologies"
-        app:layout_constraintTop_toBottomOf="@+id/specialists_chip_group"
-        app:layout_constraintStart_toStartOf="parent"
-        android:layout_marginTop="@dimen/margin_default"
-        />
+        <TextView
+            android:id="@+id/technologies"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_default"
+            android:text="@string/technologies"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/specialists_chip_recycler" />
 
-    <com.google.android.material.chip.ChipGroup
-        android:id="@+id/technologies_chip_group"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/technologies"
-        android:layout_marginTop="@dimen/margin_small"
-        >
-        <com.google.android.material.chip.Chip
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="Backend Developer"
-            android:textAllCaps="true"
-            />
-        <com.google.android.material.chip.Chip
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="Java"
-            android:textAllCaps="true"
-            />
-        <com.google.android.material.chip.Chip
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="Kotlin"
-            android:textAllCaps="true"
-            />
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/technologies_chip_recycler"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_small"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/technologies"
+            app:layoutManager="com.google.android.flexbox.FlexboxLayoutManager"
+            android:orientation="horizontal"
+            tools:itemCount="3"
+            tools:listitem="@layout/idea_chip_item">
 
-    </com.google.android.material.chip.ChipGroup>
+
+        </androidx.recyclerview.widget.RecyclerView>
 
-    <TextView
-        android:id="@+id/languages"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/programming_languages"
-        app:layout_constraintTop_toBottomOf="@+id/technologies_chip_group"
-        app:layout_constraintStart_toStartOf="parent"
-        android:layout_marginTop="@dimen/margin_default"
-        />
+        <TextView
+            android:id="@+id/languages"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_default"
+            android:text="@string/programming_languages"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/technologies_chip_recycler" />
 
-    <com.google.android.material.chip.ChipGroup
-        android:id="@+id/languages_chip_group"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/languages"
-        android:layout_marginTop="@dimen/margin_small"
-        >
-        <com.google.android.material.chip.Chip
-            android:layout_width="wrap_content"
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/languages_chip_recycler"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_small"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/languages"
+            app:layoutManager="com.google.android.flexbox.FlexboxLayoutManager"
+            android:orientation="horizontal"
+            tools:itemCount="3"
+            tools:listitem="@layout/idea_chip_item" />
+
+        <androidx.appcompat.widget.AppCompatButton
+            style="@style/BtnIdeaShowMore"
+            android:id="@+id/view_more_btn"
+            android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:text="Backend Developer"
-            android:textAllCaps="true"
-            />
-        <com.google.android.material.chip.Chip
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="Java"
-            android:textAllCaps="true"
-            />
-        <com.google.android.material.chip.Chip
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="Kotlin"
-            android:textAllCaps="true"
-            />
-
-    </com.google.android.material.chip.ChipGroup>
-
-
-
+            app:layout_constraintTop_toBottomOf="@id/languages_chip_recycler"
+            android:layout_marginTop="@dimen/margin_default"
+            android:text="@string/view_more" />
 
 
-
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_launcher_rounded.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher_rounded.xml b/app/src/main/res/drawable/ic_launcher_rounded.xml
new file mode 100644
--- /dev/null	(date 1646836896869)
+++ b/app/src/main/res/drawable/ic_launcher_rounded.xml	(date 1646836896869)
@@ -0,0 +1,24 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="120dp"
+    android:height="120dp"
+    android:viewportWidth="120"
+    android:viewportHeight="120">
+  <path
+      android:pathData="M60,0L60,0A60,60 0,0 1,120 60L120,60A60,60 0,0 1,60 120L60,120A60,60 0,0 1,0 60L0,60A60,60 0,0 1,60 0z"
+      android:fillColor="#ffffff"/>
+  <path
+      android:pathData="M80.038,52.849L46.566,67.366C45.552,67.678 44.587,67.551 43.67,66.985C42.753,66.42 42.158,65.61 41.885,64.556C41.612,63.502 41.739,62.498 42.265,61.541C42.792,60.585 43.563,59.951 44.577,59.639L78.049,45.122C79.102,44.849 80.077,44.985 80.975,45.532C81.872,46.078 82.467,46.888 82.76,47.961C83.052,49.034 82.925,50.049 82.379,51.005C81.833,51.961 81.053,52.576 80.038,52.849ZM76.293,41.61L42.821,56.127C41.807,56.439 40.841,56.312 39.925,55.746C39.008,55.181 38.413,54.371 38.14,53.317C37.867,52.263 37.994,51.258 38.52,50.302C39.047,49.346 39.817,48.732 40.832,48.458L74.304,33.883C75.357,33.61 76.332,33.746 77.23,34.293C78.127,34.839 78.722,35.649 79.014,36.722C79.307,37.795 79.18,38.81 78.634,39.766C78.088,40.722 77.308,41.336 76.293,41.61ZM55.695,37.863L46.566,41.141C45.552,41.454 44.587,41.336 43.67,40.79C42.753,40.244 42.158,39.434 41.885,38.361C41.612,37.288 41.739,36.273 42.265,35.317C42.792,34.361 43.563,33.746 44.577,33.473L53.764,30.136C54.778,29.863 55.744,30 56.661,30.546C57.577,31.093 58.172,31.902 58.445,32.976C58.719,34.049 58.592,35.063 58.065,36.02C57.539,36.976 56.749,37.59 55.695,37.863ZM54.466,67.893C54.856,67.541 55.305,67.288 55.812,67.132L74.304,60.107C75.357,59.834 76.332,59.971 77.23,60.517C78.127,61.063 78.722,61.873 79.014,62.946C79.307,64.02 79.18,65.034 78.634,65.99C78.088,66.946 77.308,67.561 76.293,67.834L60.494,73.863C60.455,74.371 60.435,74.741 60.435,74.976H64.18C65.233,74.976 66.121,75.346 66.843,76.088C67.564,76.829 67.925,77.717 67.925,78.751C67.925,79.785 67.564,80.663 66.843,81.385C66.121,82.107 65.233,82.468 64.18,82.468H56.69C56.456,82.468 56.222,82.449 55.988,82.41C54.076,82.215 52.467,81.405 51.16,79.98C49.853,78.556 49.2,76.888 49.2,74.976C49.2,73.337 49.687,71.863 50.663,70.556C51.638,69.249 52.906,68.361 54.466,67.893ZM60.435,89.961C58.368,89.961 56.602,89.6 55.139,88.878C53.676,88.156 52.945,87.268 52.945,86.215H67.925C67.925,87.268 67.194,88.156 65.731,88.878C64.268,89.6 62.503,89.961 60.435,89.961Z">
+    <aapt:attr name="android:fillColor">
+      <gradient 
+          android:startY="89.9609"
+          android:startX="60.4563"
+          android:endY="30"
+          android:endX="60.4563"
+          android:type="linear">
+        <item android:offset="0" android:color="#FF007CF0"/>
+        <item android:offset="1" android:color="#FF00DFD8"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+</vector>
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <dimen name=\"padding_default\">12dp</dimen>\n    <dimen name=\"corners_radius_small\">6dp</dimen>\n    <dimen name=\"corners_radius_default\">12dp</dimen>\n    <dimen name=\"margin_default\">12dp</dimen>\n    <dimen name=\"margin_small\">6dp</dimen>\n    <dimen name=\"padding_small\">6dp</dimen>\n    <dimen name=\"corners_radius_large\">32dp</dimen>\n    <dimen name=\"zero\">0dp</dimen>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
--- a/app/src/main/res/values/dimens.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/values/dimens.xml	(date 1647011182186)
@@ -4,8 +4,14 @@
     <dimen name="corners_radius_small">6dp</dimen>
     <dimen name="corners_radius_default">12dp</dimen>
     <dimen name="margin_default">12dp</dimen>
+    <dimen name="margin_low">2dp</dimen>
     <dimen name="margin_small">6dp</dimen>
     <dimen name="padding_small">6dp</dimen>
     <dimen name="corners_radius_large">32dp</dimen>
     <dimen name="zero">0dp</dimen>
+    <dimen name="padding_chip">8dp</dimen>
+
+    <dimen name="profile_image_size">130dp</dimen>
+    <dimen name="idea_profile_image_large">50dp</dimen>
+
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaDetailsModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaDetailsModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaDetailsModel.kt
new file mode 100644
--- /dev/null	(date 1648123008827)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaDetailsModel.kt	(date 1648123008827)
@@ -0,0 +1,23 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.explore
+
+import com.google.gson.annotations.SerializedName
+
+data class IdeaDetailsModel(
+    @SerializedName("id")
+    val id: String,
+
+    @SerializedName("ownerIdea")
+    val ownerIdea: OwnerIdea,
+
+    @SerializedName("name")
+    val name: String,
+
+    @SerializedName("status")
+    val status: IdeaStatus,
+
+    @SerializedName("description")
+    val description: String,
+
+    @SerializedName("text")
+    val body : String
+    )
\ No newline at end of file
Index: app/src/main/res/drawable/ic_launcher.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher.xml b/app/src/main/res/drawable/ic_launcher.xml
new file mode 100644
--- /dev/null	(date 1646836520722)
+++ b/app/src/main/res/drawable/ic_launcher.xml	(date 1646836520722)
@@ -0,0 +1,24 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="120dp"
+    android:height="120dp"
+    android:viewportWidth="120"
+    android:viewportHeight="120">
+  <path
+      android:pathData="M0,0h120v120h-120z"
+      android:fillColor="#ffffff"/>
+  <path
+      android:pathData="M80.038,52.849L46.566,67.366C45.552,67.678 44.587,67.551 43.67,66.985C42.753,66.42 42.158,65.61 41.885,64.556C41.612,63.502 41.739,62.498 42.265,61.541C42.792,60.585 43.563,59.951 44.577,59.639L78.049,45.122C79.102,44.849 80.077,44.985 80.975,45.532C81.872,46.078 82.467,46.888 82.76,47.961C83.052,49.034 82.925,50.049 82.379,51.005C81.833,51.961 81.053,52.576 80.038,52.849ZM76.293,41.61L42.821,56.127C41.807,56.439 40.841,56.312 39.925,55.746C39.008,55.181 38.413,54.371 38.14,53.317C37.867,52.263 37.994,51.258 38.52,50.302C39.047,49.346 39.817,48.732 40.832,48.458L74.304,33.883C75.357,33.61 76.332,33.746 77.23,34.293C78.127,34.839 78.722,35.649 79.014,36.722C79.307,37.795 79.18,38.81 78.634,39.766C78.088,40.722 77.308,41.336 76.293,41.61ZM55.695,37.863L46.566,41.141C45.552,41.454 44.587,41.336 43.67,40.79C42.753,40.244 42.158,39.434 41.885,38.361C41.612,37.288 41.739,36.273 42.265,35.317C42.792,34.361 43.563,33.746 44.577,33.473L53.764,30.136C54.778,29.863 55.744,30 56.661,30.546C57.577,31.093 58.172,31.902 58.445,32.976C58.719,34.049 58.592,35.063 58.065,36.02C57.539,36.976 56.749,37.59 55.695,37.863ZM54.466,67.893C54.856,67.541 55.305,67.288 55.812,67.132L74.304,60.107C75.357,59.834 76.332,59.971 77.23,60.517C78.127,61.063 78.722,61.873 79.014,62.946C79.307,64.02 79.18,65.034 78.634,65.99C78.088,66.946 77.308,67.561 76.293,67.834L60.494,73.863C60.455,74.371 60.435,74.741 60.435,74.976H64.18C65.233,74.976 66.121,75.346 66.843,76.088C67.564,76.829 67.925,77.717 67.925,78.751C67.925,79.785 67.564,80.663 66.843,81.385C66.121,82.107 65.233,82.468 64.18,82.468H56.69C56.456,82.468 56.222,82.449 55.988,82.41C54.076,82.215 52.467,81.405 51.16,79.98C49.853,78.556 49.2,76.888 49.2,74.976C49.2,73.337 49.687,71.863 50.663,70.556C51.638,69.249 52.906,68.361 54.466,67.893ZM60.435,89.961C58.368,89.961 56.602,89.6 55.139,88.878C53.676,88.156 52.945,87.268 52.945,86.215H67.925C67.925,87.268 67.194,88.156 65.731,88.878C64.268,89.6 62.503,89.961 60.435,89.961Z">
+    <aapt:attr name="android:fillColor">
+      <gradient 
+          android:startY="89.9609"
+          android:startX="60.4563"
+          android:endY="30"
+          android:endX="60.4563"
+          android:type="linear">
+        <item android:offset="0" android:color="#FF007CF0"/>
+        <item android:offset="1" android:color="#FF00DFD8"/>
+      </gradient>
+    </aapt:attr>
+  </path>
+</vector>
Index: app/src/main/res/layout/item_idea_progress.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_margin=\"@dimen/padding_default\"\n    android:padding=\"@dimen/padding_default\"\n    android:background=\"@drawable/bg_rect_rounded_white\"\n    >\n\n    <ImageView\n        android:id=\"@+id/ownerPhoto\"\n        android:layout_width=\"30dp\"\n        android:layout_height=\"30dp\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        android:scaleType=\"centerCrop\"\n        android:adjustViewBounds=\"true\"\n        android:contentDescription=\"@string/cd_idea_post_owner\"\n        android:background=\"@drawable/bg_rect_rounded_gray_medium_12\"\n        />\n\n    <TextView\n        android:id=\"@+id/ownerFullName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"@dimen/margin_small\"\n        android:text=\"@string/default_name\"\n        android:textSize=\"6pt\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/ownerPhoto\"\n        app:layout_constraintStart_toEndOf=\"@+id/ownerPhoto\"\n        app:layout_constraintTop_toTopOf=\"@+id/ownerPhoto\"\n        android:background=\"@drawable/bg_rect_rounded_gray_medium_12\"\n        android:textColor=\"@color/gray_medium\"\n        />\n\n    <TextView\n        android:id=\"@+id/ownerUsername\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"@dimen/margin_small\"\n        android:text=\"@string/default_username\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/ownerPhoto\"\n        app:layout_constraintStart_toEndOf=\"@id/ownerFullName\"\n        app:layout_constraintTop_toTopOf=\"@+id/ownerPhoto\"\n        android:background=\"@drawable/bg_rect_rounded_gray_medium_12\"\n        android:textColor=\"@color/gray_medium\"\n        />\n\n    <TextView\n        android:id=\"@+id/ideaTitle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/default_idea_title\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/ownerPhoto\"\n        android:textSize=\"10pt\"\n        android:textStyle=\"bold\"\n        android:layout_marginTop=\"@dimen/margin_default\"\n        android:textColor=\"@color/gray_medium\"\n        android:background=\"@drawable/bg_rect_rounded_gray_medium_12\"\n        />\n\n    <TextView\n        android:id=\"@+id/ideaDescription\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/default_description_text\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/ideaTitle\"\n        android:layout_marginTop=\"@dimen/margin_small\"\n        android:textSize=\"6pt\"\n        android:textColor=\"@color/gray_light\"\n        android:background=\"@drawable/bg_rect_rounded_gray_light_12\"\n        />\n\n    <TextView\n        android:id=\"@+id/specialists\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/specialists\"\n        android:textColor=\"@color/gray_medium\"\n        android:background=\"@drawable/bg_rect_rounded_gray_medium_12\"\n        app:layout_constraintTop_toBottomOf=\"@+id/ideaDescription\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:layout_marginTop=\"@dimen/margin_default\"\n        />\n\n    <com.google.android.material.chip.ChipGroup\n        android:id=\"@+id/specialists_chip_group\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/specialists\"\n        android:layout_marginTop=\"@dimen/margin_small\"\n        >\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"120dp\"\n            android:layout_height=\"wrap_content\"\n            android:textAllCaps=\"true\"\n            />\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"100dp\"\n            android:layout_height=\"wrap_content\"\n            android:textAllCaps=\"true\"\n            />\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"120dp\"\n            android:layout_height=\"wrap_content\"\n            android:textAllCaps=\"true\"\n            />\n\n    </com.google.android.material.chip.ChipGroup>\n\n    <TextView\n        android:id=\"@+id/technologies\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/technologies\"\n        android:textColor=\"@color/gray_medium\"\n        android:background=\"@drawable/bg_rect_rounded_gray_medium_12\"\n        app:layout_constraintTop_toBottomOf=\"@+id/specialists_chip_group\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:layout_marginTop=\"@dimen/margin_default\"\n        />\n\n    <com.google.android.material.chip.ChipGroup\n        android:id=\"@+id/technologies_chip_group\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/technologies\"\n        android:layout_marginTop=\"@dimen/margin_small\"\n        >\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"80dp\"\n            android:layout_height=\"wrap_content\"\n            android:textAllCaps=\"true\"\n            />\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"120dp\"\n            android:layout_height=\"wrap_content\"\n            android:textAllCaps=\"true\"\n            />\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"80dp\"\n            android:layout_height=\"wrap_content\"\n            android:textAllCaps=\"true\"\n            />\n\n    </com.google.android.material.chip.ChipGroup>\n\n    <TextView\n        android:id=\"@+id/languages\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/programming_languages\"\n        app:layout_constraintTop_toBottomOf=\"@+id/technologies_chip_group\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:layout_marginTop=\"@dimen/margin_default\"\n        android:textColor=\"@color/gray_medium\"\n        android:background=\"@drawable/bg_rect_rounded_gray_medium_12\"\n        />\n\n    <com.google.android.material.chip.ChipGroup\n        android:id=\"@+id/languages_chip_group\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/languages\"\n        android:layout_marginTop=\"@dimen/margin_small\"\n        >\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"120dp\"\n            android:layout_height=\"wrap_content\"\n            android:textAllCaps=\"true\"\n            />\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"100dp\"\n            android:layout_height=\"wrap_content\"\n            android:textAllCaps=\"true\"\n            />\n        <com.google.android.material.chip.Chip\n            android:layout_width=\"120dp\"\n            android:layout_height=\"wrap_content\"\n            android:textAllCaps=\"true\"\n            />\n\n    </com.google.android.material.chip.ChipGroup>\n\n\n\n\n\n\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_idea_progress.xml b/app/src/main/res/layout/item_idea_progress.xml
--- a/app/src/main/res/layout/item_idea_progress.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/layout/item_idea_progress.xml	(date 1646665460926)
@@ -87,7 +87,7 @@
         />
 
     <com.google.android.material.chip.ChipGroup
-        android:id="@+id/specialists_chip_group"
+        android:id="@+id/specialists_chip_recycler"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         app:layout_constraintStart_toStartOf="parent"
@@ -120,13 +120,13 @@
         android:text="@string/technologies"
         android:textColor="@color/gray_medium"
         android:background="@drawable/bg_rect_rounded_gray_medium_12"
-        app:layout_constraintTop_toBottomOf="@+id/specialists_chip_group"
+        app:layout_constraintTop_toBottomOf="@+id/specialists_chip_recycler"
         app:layout_constraintStart_toStartOf="parent"
         android:layout_marginTop="@dimen/margin_default"
         />
 
     <com.google.android.material.chip.ChipGroup
-        android:id="@+id/technologies_chip_group"
+        android:id="@+id/technologies_chip_recycler"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         app:layout_constraintStart_toStartOf="parent"
@@ -157,7 +157,7 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:text="@string/programming_languages"
-        app:layout_constraintTop_toBottomOf="@+id/technologies_chip_group"
+        app:layout_constraintTop_toBottomOf="@+id/technologies_chip_recycler"
         app:layout_constraintStart_toStartOf="parent"
         android:layout_marginTop="@dimen/margin_default"
         android:textColor="@color/gray_medium"
@@ -165,7 +165,7 @@
         />
 
     <com.google.android.material.chip.ChipGroup
-        android:id="@+id/languages_chip_group"
+        android:id="@+id/languages_chip_recycler"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         app:layout_constraintStart_toStartOf="parent"
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\nplugins {\n    id 'com.android.application' version '7.1.2' apply false\n    id 'com.android.library' version '7.1.2' apply false\n    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/build.gradle	(date 1647257178569)
@@ -1,10 +1,25 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+
+buildscript {
+    repositories {
+        google()
+    }
+    dependencies {
+        def nav_version = "2.4.1"
+        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
+    }
+}
+
 plugins {
     id 'com.android.application' version '7.1.2' apply false
     id 'com.android.library' version '7.1.2' apply false
     id 'org.jetbrains.kotlin.android' version '1.6.10' apply false
 }
 
+
+
+
 task clean(type: Delete) {
     delete rootProject.buildDir
 }
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/DataStoreModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/DataStoreModule.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/DataStoreModule.kt
new file mode 100644
--- /dev/null	(date 1647183423726)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/DataStoreModule.kt	(date 1647183423726)
@@ -0,0 +1,22 @@
+package com.github.bgrebennikov.devbuff.di.modules
+
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreHelper
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreHelperImpl
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreRepository
+import com.github.bgrebennikov.devbuff.domain.DataStoreRepositoryImpl
+import dagger.Binds
+import dagger.Module
+import javax.inject.Singleton
+
+@Module
+interface DataStoreModule {
+
+    @Singleton
+    @Binds
+    fun bindsDataStore(impl: DataStoreRepositoryImpl): DataStoreRepository
+
+    @Singleton
+    @Binds
+    fun bindsDataStoreHelper(impl: DataStoreHelperImpl) : DataStoreHelper
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/idea_chip_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/idea_chip_item.xml b/app/src/main/res/layout/idea_chip_item.xml
new file mode 100644
--- /dev/null	(date 1647341494671)
+++ b/app/src/main/res/layout/idea_chip_item.xml	(date 1647341494671)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <data>
+        <variable
+            name="title"
+            type="String" />
+    </data>
+
+    <com.google.android.material.chip.Chip
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginEnd="@dimen/margin_default"
+        android:textAllCaps="true"
+        android:id="@+id/chip"
+        tools:text="Category"
+        android:text="@{title}"
+        android:backgroundTint="@{title.hashCode()}"
+        >
+
+
+    </com.google.android.material.chip.Chip>
+</layout>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/BaseActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/BaseActivity.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/BaseActivity.kt
new file mode 100644
--- /dev/null	(date 1646903934843)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/BaseActivity.kt	(date 1646903934843)
@@ -0,0 +1,17 @@
+package com.github.bgrebennikov.devbuff.presentation.ui
+
+import androidx.appcompat.app.AppCompatActivity
+import androidx.lifecycle.ViewModelProvider
+import com.github.bgrebennikov.devbuff.BaseApplication
+import javax.inject.Inject
+
+open class BaseActivity : AppCompatActivity() {
+
+    @Inject
+    lateinit var viewModelFactory : ViewModelProvider.Factory
+
+    val component by lazy {
+        (application as BaseApplication).component
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/drawable/bg_gradient.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/bg_gradient.xml b/app/src/main/res/drawable/bg_gradient.xml
new file mode 100644
--- /dev/null	(date 1646902852953)
+++ b/app/src/main/res/drawable/bg_gradient.xml	(date 1646902852953)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape>
+            <gradient
+                android:startColor="@color/blue"
+                android:endColor="@android:color/transparent"
+                android:type="linear"
+                android:angle="90"
+                />
+        </shape>
+    </item>
+</selector>
\ No newline at end of file
Index: app/src/main/res/drawable/bg_chip_gray.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/bg_chip_gray.xml b/app/src/main/res/drawable/bg_chip_gray.xml
new file mode 100644
--- /dev/null	(date 1646664702936)
+++ b/app/src/main/res/drawable/bg_chip_gray.xml	(date 1646664702936)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle"
+    >
+
+    <corners android:radius="100dp"/>
+    <solid android:color="@color/gray_light"/>
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleIdeaModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleIdeaModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleIdeaModel.kt
new file mode 100644
--- /dev/null	(date 1648122039120)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleIdeaModel.kt	(date 1648122039120)
@@ -0,0 +1,28 @@
+package com.github.bgrebennikov.devbuff.data.local
+
+import android.os.Parcelable
+import com.github.bgrebennikov.devbuff.data.remote.models.explore.OwnerIdea
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
+import kotlinx.parcelize.Parcelize
+import java.util.*
+
+@Parcelize
+data class SimpleIdeaModel(
+    val id: String,
+    val ownerIdea: OwnerIdea,
+    val name: String,
+    val description: String,
+
+    val requirements: List<SimpleIdeaRequirements>,
+    val technologies: List<SimpleTechnologiesModel>,
+    val languages: List<SimpleLanguagesModel>,
+
+    val updateDate: String,
+    val publishDate: String
+
+) : ListItem, Parcelable {
+    override val itemId: Int
+        get() = this.id.hashCode()
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSkills.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSkills.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSkills.kt
new file mode 100644
--- /dev/null	(date 1646908719246)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSkills.kt	(date 1646908719246)
@@ -0,0 +1,14 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.user
+
+import com.google.gson.annotations.SerializedName
+
+data class UserSkills(
+    @SerializedName("name")
+    val name: String,
+
+    @SerializedName("levelKnowledge")
+    val levelKnowledge: String,
+
+    @SerializedName("specializations")
+    val specializations: List<UserSkillsSpecializations>,
+    )
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSocialNetworks.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSocialNetworks.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSocialNetworks.kt
new file mode 100644
--- /dev/null	(date 1646908509703)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSocialNetworks.kt	(date 1646908509703)
@@ -0,0 +1,17 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.user
+
+import com.google.gson.annotations.SerializedName
+
+data class UserSocialNetworks(
+    @SerializedName("telegram")
+    val telegram : String?,
+
+    @SerializedName("vk")
+    val vk : String?,
+
+    @SerializedName("skype")
+    val skype : String?,
+
+    @SerializedName("discord")
+    val discord : String?
+)
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/mappers/MapperIdeas.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/mappers/MapperIdeas.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/mappers/MapperIdeas.kt
new file mode 100644
--- /dev/null	(date 1648122039113)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/mappers/MapperIdeas.kt	(date 1648122039113)
@@ -0,0 +1,90 @@
+package com.github.bgrebennikov.devbuff.data.mappers
+
+import android.text.format.DateUtils
+import android.util.Log
+import com.github.bgrebennikov.devbuff.common.TAG
+import com.github.bgrebennikov.devbuff.data.remote.models.explore.IdeaModel
+import com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel
+import com.github.bgrebennikov.devbuff.data.local.SimpleIdeaRequirements
+import com.github.bgrebennikov.devbuff.data.local.SimpleLanguagesModel
+import com.github.bgrebennikov.devbuff.data.local.SimpleTechnologiesModel
+import java.text.SimpleDateFormat
+import java.util.*
+
+class MapperIdeas{
+
+    private fun mapToSimpleIdeaObject(ideaModel: IdeaModel) : SimpleIdeaModel {
+        val requirementsHashSet = hashSetOf<SimpleIdeaRequirements>()
+        val technologiesHashSet = hashSetOf<SimpleTechnologiesModel>()
+        val languagesHashSet = hashSetOf<SimpleLanguagesModel>()
+
+        ideaModel.requirements.map { req ->
+            requirementsHashSet.add(
+                SimpleIdeaRequirements(
+                    req.name
+                )
+            )
+
+            req.languages.map { languages ->
+                languagesHashSet.add(
+                    SimpleLanguagesModel(
+                        languages.name
+                    )
+                )
+
+                languages.technologies.map { technologies ->
+                    technologiesHashSet.add(
+                        SimpleTechnologiesModel(
+                            technologies.name
+                        )
+                    )
+                }
+
+            }
+        }
+
+
+        return SimpleIdeaModel(
+            ideaModel.id,
+            ideaModel.ownerIdea,
+            ideaModel.name,
+            ideaModel.description,
+            requirementsHashSet.toList(),
+            technologiesHashSet.toList(),
+            languagesHashSet.toList(),
+            ideaModel.updateDate,
+            ideaModel.publishDate
+        )
+
+    }
+
+    fun mapToSimpleIdeasList(ideaModel: List<IdeaModel>): List<SimpleIdeaModel> {
+
+
+        val requirementsHashSet = hashSetOf<String>()
+        val technologiesHashSet = hashSetOf<String>()
+        val languagesHashSet = hashSetOf<String>()
+
+        Log.i(TAG, "mapToSimpleIdeasList: $ideaModel")
+
+        ideaModel.map { idea ->
+            idea.requirements.map { req ->
+                requirementsHashSet.add(req.name)
+
+                req.languages.map { languages ->
+                    languagesHashSet.add(languages.name)
+
+                    languages.technologies.map { technologies ->
+                        technologiesHashSet.add(technologies.name)
+                    }
+
+                }
+            }
+        }
+
+        return ideaModel.map { mapToSimpleIdeaObject(it) }
+
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.github.bgrebennikov.devbuff\">\n\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n\n    <application\n        android:name=\".BaseApplication\"\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.DevBuff\">\n        <activity\n            android:name=\".presentation.ui.MainActivity\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n\n                <action android:name=\"android.intent.action.VIEW\"/>\n                <category android:name=\"android.intent.category.DEFAULT\"/>\n                <category android:name=\"android.intent.category.BROWSABLE\"/>\n\n                <data\n                    android:host=\"callback\"\n                    android:scheme=\"devbuff\"\n                    />\n\n            </intent-filter>\n        </activity>\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/AndroidManifest.xml	(date 1647967454939)
@@ -8,29 +8,43 @@
     <application
         android:name=".BaseApplication"
         android:allowBackup="true"
-        android:icon="@mipmap/ic_launcher"
+        android:icon="@drawable/ic_launcher"
         android:label="@string/app_name"
-        android:roundIcon="@mipmap/ic_launcher_round"
+        android:roundIcon="@drawable/ic_launcher_rounded"
         android:supportsRtl="true"
         android:theme="@style/Theme.DevBuff">
         <activity
-            android:name=".presentation.ui.MainActivity"
-            android:exported="true">
+            android:name=".presentation.ui.SplashScreen"
+            android:theme="@style/SplashTheme"
+            android:exported="true"
+            >
             <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
 
-                <action android:name="android.intent.action.VIEW"/>
-                <category android:name="android.intent.category.DEFAULT"/>
-                <category android:name="android.intent.category.BROWSABLE"/>
+        <activity
+            android:name=".presentation.ui.GithubAuthActivity"
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.BROWSABLE" />
 
                 <data
                     android:host="callback"
-                    android:scheme="devbuff"
-                    />
-
+                    android:path="/GitHub"
+                    android:scheme="devbuff" />
             </intent-filter>
         </activity>
+        <activity
+            android:name=".presentation.ui.GuestActivity"
+            android:exported="false"/>
+        <activity
+            android:name=".presentation.ui.MainActivity"
+            android:exported="false"/>
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSkillsSpecializations.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSkillsSpecializations.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSkillsSpecializations.kt
new file mode 100644
--- /dev/null	(date 1646908719253)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserSkillsSpecializations.kt	(date 1646908719253)
@@ -0,0 +1,10 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.user
+
+import com.google.gson.annotations.SerializedName
+
+data class UserSkillsSpecializations(
+
+    @SerializedName("name")
+    val name : String,
+
+)
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserProfileModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserProfileModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserProfileModel.kt
new file mode 100644
--- /dev/null	(date 1646923937533)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/user/UserProfileModel.kt	(date 1646923937533)
@@ -0,0 +1,33 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.user
+
+import com.google.gson.annotations.SerializedName
+
+data class UserProfileModel(
+    @SerializedName("id")
+    val id: String,
+
+    @SerializedName("firstName")
+    val firstName: String,
+
+    @SerializedName("lastName")
+    val lastName: String?,
+
+    @SerializedName("userName")
+    val username: String?,
+
+    @SerializedName("email")
+    val email: String?,
+
+    @SerializedName("statusEmailConfirm")
+    val statusEmailConfirm: Boolean,
+
+    @SerializedName("bio")
+    val bio: String,
+
+    @SerializedName("socialNetworks")
+    val socialNetworks: UserSocialNetworks,
+
+    @SerializedName("skills")
+    val skills: List<UserSkills>
+
+    )
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleLanguagesModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleLanguagesModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleLanguagesModel.kt
new file mode 100644
--- /dev/null	(date 1647339896278)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleLanguagesModel.kt	(date 1647339896278)
@@ -0,0 +1,13 @@
+package com.github.bgrebennikov.devbuff.data.local
+
+import android.os.Parcelable
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
+import kotlinx.parcelize.Parcelize
+
+@Parcelize
+data class SimpleLanguagesModel(
+    val name: String
+) : ListItem, Parcelable {
+    override val itemId: Int
+        get() = name.hashCode()
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleTechnologiesModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleTechnologiesModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleTechnologiesModel.kt
new file mode 100644
--- /dev/null	(date 1647009048056)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleTechnologiesModel.kt	(date 1647009048056)
@@ -0,0 +1,13 @@
+package com.github.bgrebennikov.devbuff.data.local
+
+import android.os.Parcelable
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
+import kotlinx.parcelize.Parcelize
+
+@Parcelize
+data class SimpleTechnologiesModel(
+    val name: String
+) : ListItem, Parcelable {
+    override val itemId: Int
+        get() = this.name.hashCode()
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/network/UserServiceInterceptor.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/network/UserServiceInterceptor.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/network/UserServiceInterceptor.kt
new file mode 100644
--- /dev/null	(date 1647771085643)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/network/UserServiceInterceptor.kt	(date 1647771085643)
@@ -0,0 +1,93 @@
+package com.github.bgrebennikov.devbuff.network
+
+import android.app.Application
+import android.content.Intent
+import android.util.Log
+import androidx.datastore.preferences.core.edit
+import com.github.bgrebennikov.devbuff.common.AUTHORIZATION_HEADER
+import com.github.bgrebennikov.devbuff.common.ServerErrorCodes
+import com.github.bgrebennikov.devbuff.common.TAG
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreHelper
+import com.github.bgrebennikov.devbuff.data.local.Status
+import com.github.bgrebennikov.devbuff.data.remote.UserApiService
+import com.github.bgrebennikov.devbuff.domain.TokenServiceRepository
+import com.github.bgrebennikov.devbuff.domain.user.UserRemoteRepository
+import com.github.bgrebennikov.devbuff.presentation.ui.GuestActivity
+import kotlinx.coroutines.runBlocking
+import okhttp3.Interceptor
+import okhttp3.Response
+import retrofit2.HttpException
+import javax.inject.Inject
+
+class UserServiceInterceptor @Inject constructor(
+    private val dataStoreHelper: DataStoreHelper,
+    private val application: Application,
+    private val tokenService: TokenServiceRepository
+) : Interceptor {
+    override fun intercept(chain: Interceptor.Chain): Response {
+
+        synchronized(this){
+
+            val accessToken = dataStoreHelper.getAccessToken()
+            val refreshToken = dataStoreHelper.getRefreshToken()
+
+            val originalRequest = chain.request()
+            var authRequest = originalRequest.newBuilder()
+                .addHeader(AUTHORIZATION_HEADER, "Bearer $accessToken")
+                .build()
+
+            val initialResponse = chain.proceed(authRequest)
+
+            if(initialResponse.code == ServerErrorCodes.UNAUTHORIZED){
+
+                runBlocking {
+                    try {
+                        val tokenResponse = tokenService.updateToken(
+                            accessToken = accessToken!!,
+                            refreshToken = refreshToken
+                        )
+
+                        tokenResponse?.let {
+                            when(it.status){
+                                Status.SUCCESS -> {
+                                    it.data.let { authConfig ->
+                                        dataStoreHelper.storeUserModel(authConfig!!)
+                                        authRequest = originalRequest.newBuilder()
+                                            .header(AUTHORIZATION_HEADER, "Bearer ${authConfig.access_token}")
+                                            .build()
+                                        Log.i(TAG, "intercept: Access token updated")
+                                    }
+                                }
+                                Status.ERROR ->{
+                                    dataStoreHelper.clearAll()
+                                    application.startActivity(
+                                        Intent(
+                                            application,
+                                            GuestActivity::class.java
+                                        ).setFlags(Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK)
+                                    )
+                                }
+                                Status.LOADING ->{
+
+                                }
+                            }
+                        }
+
+                    } catch (e : HttpException){
+                        e.printStackTrace()
+                        Log.i(TAG, "intercept: ${e.localizedMessage}")
+
+                    }
+                }
+
+
+
+            }
+
+
+            return chain.proceed(authRequest)
+
+        }
+
+    }
+}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id 'com.android.application'\n    id 'org.jetbrains.kotlin.android'\n    id 'kotlin-kapt'\n}\n\nandroid {\n    compileSdk 32\n\n    defaultConfig {\n        applicationId \"com.github.bgrebennikov.devbuff\"\n        minSdk 23\n        targetSdk 32\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildFeatures{\n        viewBinding true\n        dataBinding true\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = '1.8'\n    }\n}\n\ndependencies {\n\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'\n    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'\n    def lifecycle_version = \"2.5.0-alpha03\"\n    def arch_version = \"2.1.0\"\n    def retrofit_version = \"2.9.0\"\n    def dagger_version = \"2.41\"\n\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.5.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n\n\n    implementation \"com.squareup.retrofit2:retrofit:$retrofit_version\"\n    implementation \"com.squareup.retrofit2:converter-gson:$retrofit_version\"\n\n    implementation \"com.google.dagger:dagger:$dagger_version\"\n    kapt \"com.google.dagger:dagger-compiler:$dagger_version\"\n\n    implementation(\"com.squareup.okhttp3:logging-interceptor:4.9.3\")\n\n    implementation \"com.hannesdorfmann:adapterdelegates4-kotlin-dsl-viewbinding:4.3.1\"\n\n    implementation 'com.github.bumptech.glide:glide:4.13.0'\n    kapt 'com.github.bumptech.glide:compiler:4.13.0'\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/build.gradle	(date 1648316034413)
@@ -2,6 +2,8 @@
     id 'com.android.application'
     id 'org.jetbrains.kotlin.android'
     id 'kotlin-kapt'
+    id 'kotlin-parcelize'
+    id 'androidx.navigation.safeargs.kotlin'
 }
 
 android {
@@ -22,6 +24,7 @@
         dataBinding true
     }
 
+
     buildTypes {
         release {
             minifyEnabled false
@@ -62,12 +65,28 @@
     implementation "com.google.dagger:dagger:$dagger_version"
     kapt "com.google.dagger:dagger-compiler:$dagger_version"
 
+    //LifeCycle
+    implementation 'androidx.lifecycle:lifecycle-common:2.4.1'
+    implementation 'androidx.lifecycle:lifecycle-runtime:2.4.1'
+    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
+
+    //Coroutines
+    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
+
     implementation("com.squareup.okhttp3:logging-interceptor:4.9.3")
 
     implementation "com.hannesdorfmann:adapterdelegates4-kotlin-dsl-viewbinding:4.3.1"
 
-    implementation 'com.github.bumptech.glide:glide:4.13.0'
-    kapt 'com.github.bumptech.glide:compiler:4.13.0'
+    // Image loading
+    implementation 'com.github.bumptech.glide:glide:4.12.0'
+    implementation 'com.github.bumptech.glide:okhttp3-integration:4.12.0'
+    kapt 'com.github.bumptech.glide:compiler:4.12.0'
+
+    implementation "com.google.android.flexbox:flexbox:3.0.0"
+
+    implementation "androidx.datastore:datastore-preferences:1.0.0"
+
+    implementation 'com.facebook.shimmer:shimmer:0.5.0'
 
 
 
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/UserApiService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/UserApiService.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/UserApiService.kt
new file mode 100644
--- /dev/null	(date 1647177677040)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/UserApiService.kt	(date 1647177677040)
@@ -0,0 +1,18 @@
+package com.github.bgrebennikov.devbuff.data.remote
+
+import com.github.bgrebennikov.devbuff.data.remote.models.user.UserProfileModel
+import retrofit2.http.GET
+import retrofit2.http.POST
+import retrofit2.http.Query
+
+interface UserApiService {
+
+    @GET("profile")
+    suspend fun getProfile() : UserProfileModel
+
+    @POST("oauth/refresh")
+    suspend fun refresh(
+        @Query("refresh_token") refreshToken : String
+    ) : String
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleIdeaRequirements.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleIdeaRequirements.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleIdeaRequirements.kt
new file mode 100644
--- /dev/null	(date 1647339546048)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/SimpleIdeaRequirements.kt	(date 1647339546048)
@@ -0,0 +1,13 @@
+package com.github.bgrebennikov.devbuff.data.local
+
+import android.os.Parcelable
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
+import kotlinx.parcelize.Parcelize
+
+@Parcelize
+data class SimpleIdeaRequirements(
+    val name: String
+): ListItem, Parcelable {
+    override val itemId: Int
+        get() = this.name.hashCode()
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/AuthViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/AuthViewModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/AuthViewModel.kt
new file mode 100644
--- /dev/null	(date 1646837361855)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/AuthViewModel.kt	(date 1646837361855)
@@ -0,0 +1,64 @@
+package com.github.bgrebennikov.devbuff.presentation.viewModels
+
+import android.app.Application
+import android.util.Log
+import android.widget.Toast
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.viewModelScope
+import com.github.bgrebennikov.devbuff.common.TAG
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+import com.github.bgrebennikov.devbuff.domain.useCases.AuthGithubUseCase
+import com.github.bgrebennikov.devbuff.domain.useCases.StoreUserAuthUseCase
+import com.github.bgrebennikov.devbuff.domain.useCases.UserIsAuthenticated
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import java.lang.Exception
+import javax.inject.Inject
+import javax.inject.Singleton
+
+@Singleton
+class AuthViewModel @Inject constructor(
+    private val authGithubUseCase: AuthGithubUseCase,
+    private val storeUserAuthUseCase: StoreUserAuthUseCase,
+    private val userIsAuthenticated: UserIsAuthenticated,
+    private val application: Application
+) : ViewModel() {
+
+    private val _isAuthenticated = MutableLiveData<Boolean>()
+    val isAuthenticated: LiveData<Boolean> = _isAuthenticated
+
+    init {
+        viewModelScope.launch {
+            checkIsAuthenticated()
+        }
+    }
+
+    private suspend fun checkIsAuthenticated() {
+        _isAuthenticated.postValue(
+            userIsAuthenticated.invoke()
+        )
+    }
+
+    fun authUser(code: String) {
+        viewModelScope.launch(Dispatchers.IO) {
+            try {
+                val authConfig: AuthConfig = authGithubUseCase.invoke(code)
+                storeUserAuth(authConfig)
+                _isAuthenticated.postValue(true)
+
+                Toast.makeText(application.applicationContext, "Авторизовались!", Toast.LENGTH_LONG).show()
+
+            } catch (e: Exception) {
+                Log.i(TAG, e.message.toString())
+                e.printStackTrace()
+            }
+        }
+    }
+
+    private suspend fun storeUserAuth(config: AuthConfig) {
+        storeUserAuthUseCase.invoke(config)
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_guest_explore.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_guest_explore.xml b/app/src/main/res/layout/fragment_guest_explore.xml
new file mode 100644
--- /dev/null	(date 1647619632943)
+++ b/app/src/main/res/layout/fragment_guest_explore.xml	(date 1647619632943)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/gray_light"
+    tools:context=".presentation.ui.fragments.guest.GuestExploreFragment">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/ideasListRecycler"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        tools:listitem="@layout/item_idea"
+        android:nestedScrollingEnabled="false"
+        tools:itemCount="1"
+        />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/auth/AuthConfig.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/auth/AuthConfig.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/auth/AuthConfig.kt
new file mode 100644
--- /dev/null	(date 1646820098633)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/auth/AuthConfig.kt	(date 1646820098633)
@@ -0,0 +1,21 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.auth
+
+import com.google.gson.annotations.SerializedName
+
+data class AuthConfig(
+    @SerializedName("access_token")
+    val access_token : String,
+
+    @SerializedName("token_type")
+    val token_type : String,
+
+    @SerializedName("refresh_token")
+    val refresh_token : String,
+
+    @SerializedName("expires_in")
+    val expires_in : Long,
+
+    @SerializedName("scope")
+    val scope: String
+
+)
\ No newline at end of file
Index: app/src/main/res/navigation/nav_guest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/nav_guest.xml b/app/src/main/res/navigation/nav_guest.xml
new file mode 100644
--- /dev/null	(date 1646913630580)
+++ b/app/src/main/res/navigation/nav_guest.xml	(date 1646913630580)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<navigation xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/nav_guest"
+    android:label="@string/explore"
+    app:startDestination="@id/guestHomeFragment">
+
+    <fragment
+        android:id="@+id/guestHomeFragment"
+        android:name="com.github.bgrebennikov.devbuff.presentation.ui.fragments.guest.GuestExploreFragment"
+        android:label="fragment_guest_home"
+        tools:layout="@layout/fragment_guest_explore" />
+</navigation>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/utils/TextViewFromHtml.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/utils/TextViewFromHtml.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/utils/TextViewFromHtml.kt
new file mode 100644
--- /dev/null	(date 1648126940860)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/utils/TextViewFromHtml.kt	(date 1648126940860)
@@ -0,0 +1,31 @@
+package com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.utils
+
+import android.content.res.Resources
+import android.os.Build
+import android.text.Html
+import android.text.Spannable
+import android.widget.TextView
+import com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.GlideImageGetter
+import kotlin.math.roundToInt
+import kotlin.math.roundToLong
+
+fun TextView.setTextFromHtml(
+    message: String,
+    imageGetter: Html.ImageGetter = GlideImageGetter(this),
+    tagHandler: Html.TagHandler? = null
+) {
+    this.text = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
+        Html.fromHtml(message, Html.FROM_HTML_MODE_LEGACY, imageGetter, tagHandler) as Spannable
+    } else {
+        @Suppress("DEPRECATION")
+        Html.fromHtml(message, imageGetter, tagHandler) as Spannable
+    }
+}
+
+fun Int.dpToPx() = convertDpToPixel(toFloat()).toInt()
+
+fun convertDpToPixel(dp: Float): Float {
+    val metrics = Resources.getSystem().displayMetrics
+    val px = dp * (metrics.densityDpi / 160f)
+    return px.roundToInt().toFloat()
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/StoreUserAuthUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/StoreUserAuthUseCase.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/StoreUserAuthUseCase.kt
new file mode 100644
--- /dev/null	(date 1647184076463)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/StoreUserAuthUseCase.kt	(date 1647184076463)
@@ -0,0 +1,19 @@
+package com.github.bgrebennikov.devbuff.domain.useCases
+
+import com.github.bgrebennikov.devbuff.common.USER_ACCESS_TOKEN
+import com.github.bgrebennikov.devbuff.common.USER_REFRESH_TOKEN
+import com.github.bgrebennikov.devbuff.common.USER_TOKEN_EXPIRES_IN
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreHelper
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreRepository
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+import javax.inject.Inject
+
+class StoreUserAuthUseCase @Inject constructor(
+    private val dataStoreHelper: DataStoreHelper
+) {
+
+    suspend operator fun invoke(config: AuthConfig){
+        dataStoreHelper.storeUserModel(config)
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/AuthGithubUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/AuthGithubUseCase.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/AuthGithubUseCase.kt
new file mode 100644
--- /dev/null	(date 1646820098646)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/AuthGithubUseCase.kt	(date 1646820098646)
@@ -0,0 +1,15 @@
+package com.github.bgrebennikov.devbuff.domain.useCases
+
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+import com.github.bgrebennikov.devbuff.domain.Repository
+import javax.inject.Inject
+
+class AuthGithubUseCase @Inject constructor(
+    private val repository: Repository
+) {
+
+    suspend operator fun invoke(code: String) : AuthConfig{
+        return repository.authGithubUser(code)
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/guest/GuestExploreFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/guest/GuestExploreFragment.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/guest/GuestExploreFragment.kt
new file mode 100644
--- /dev/null	(date 1647167933381)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/guest/GuestExploreFragment.kt	(date 1647167933381)
@@ -0,0 +1,62 @@
+package com.github.bgrebennikov.devbuff.presentation.ui.fragments.guest
+
+import android.content.Context
+import android.widget.Toast
+import com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel
+import com.github.bgrebennikov.devbuff.data.local.Status
+import com.github.bgrebennikov.devbuff.databinding.FragmentGuestExploreBinding
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ExploreAdapter
+import com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.BaseFragment
+import com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.ExploreClickListener
+import com.github.bgrebennikov.devbuff.presentation.viewModels.ExploreViewModel
+
+
+class GuestExploreFragment : BaseFragment<FragmentGuestExploreBinding>(
+    FragmentGuestExploreBinding::inflate
+) {
+
+    override fun onBind(binding: FragmentGuestExploreBinding) {
+        super.onBind(binding)
+
+        binding.ideasListRecycler.adapter = adapter
+        binding.ideasListRecycler.setHasFixedSize(true)
+
+
+        viewModel.ideas.observe(viewLifecycleOwner){
+            it.let { apiResponse ->
+                when(apiResponse.status){
+                    Status.SUCCESS -> apiResponse.data?.let { ideas ->
+                        adapter.items = ideas
+                    }
+                    Status.LOADING -> apiResponse.data?.let { placeholder ->
+                        adapter.items = placeholder
+                    }
+                    Status.ERROR -> {
+                        Toast.makeText(context, it.message, Toast.LENGTH_LONG).show()
+                    }
+                }
+            }
+        }
+
+        adapter.listener = object : ExploreClickListener {
+            override fun onClickIdeaItem(idea: SimpleIdeaModel) {
+                Toast.makeText(context, "Guest: ${idea.name}", Toast.LENGTH_LONG).show()
+            }
+
+        }
+    }
+
+    private val viewModel by lazy {
+        viewModelFactory.create(ExploreViewModel::class.java)
+    }
+
+    private val adapter = ExploreAdapter()
+
+    override fun onAttach(context: Context) {
+        super.onAttach(context)
+        component.inject(this)
+    }
+
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/ExploreClickListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/ExploreClickListener.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/ExploreClickListener.kt
new file mode 100644
--- /dev/null	(date 1647008854163)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/ExploreClickListener.kt	(date 1647008854163)
@@ -0,0 +1,9 @@
+package com.github.bgrebennikov.devbuff.presentation.ui.fragments.base
+
+import com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel
+
+interface ExploreClickListener {
+
+    fun onClickIdeaItem(idea: SimpleIdeaModel)
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/GithubAuthActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/GithubAuthActivity.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/GithubAuthActivity.kt
new file mode 100644
--- /dev/null	(date 1646837361845)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/GithubAuthActivity.kt	(date 1646837361845)
@@ -0,0 +1,63 @@
+package com.github.bgrebennikov.devbuff.presentation.ui
+
+import android.content.Intent
+import androidx.appcompat.app.AppCompatActivity
+import android.os.Bundle
+import android.util.Log
+import androidx.lifecycle.ViewModelProvider
+import com.github.bgrebennikov.devbuff.BaseApplication
+import com.github.bgrebennikov.devbuff.R
+import com.github.bgrebennikov.devbuff.common.TAG
+import com.github.bgrebennikov.devbuff.databinding.ActivityGithubAuthBinding
+import com.github.bgrebennikov.devbuff.databinding.ActivityGuestBinding
+import com.github.bgrebennikov.devbuff.presentation.viewModels.AuthViewModel
+import javax.inject.Inject
+
+class GithubAuthActivity : AppCompatActivity() {
+
+    @Inject
+    lateinit var viewModelFactory : ViewModelProvider.Factory
+
+    private val binding by lazy {
+        ActivityGithubAuthBinding.inflate(layoutInflater)
+    }
+
+    private val component by lazy {
+        (application as BaseApplication).component
+    }
+
+    private val authViewModel by lazy {
+        viewModelFactory.create(AuthViewModel::class.java)
+    }
+
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        component.inject(this)
+        super.onCreate(savedInstanceState)
+        setContentView(binding.root)
+
+        authViewModel.isAuthenticated.observe(this){ isAuthenticated ->
+            Log.i(TAG, "isAuthenticated: $isAuthenticated")
+            if(isAuthenticated){
+                startActivity(
+                    Intent(
+                        this, MainActivity::class.java
+                    )
+                )
+                finish()
+                return@observe
+            }
+        }
+
+    }
+
+    override fun onResume() {
+        super.onResume()
+        val authData = intent.data
+        if (authData != null && authData.toString().startsWith(getString(R.string.redirect_uri))){
+            val authCode = authData.getQueryParameter("code")
+            if(authCode != null) authViewModel.authUser(authCode)
+        }
+
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_github_auth.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_github_auth.xml b/app/src/main/res/layout/activity_github_auth.xml
new file mode 100644
--- /dev/null	(date 1646901157646)
+++ b/app/src/main/res/layout/activity_github_auth.xml	(date 1646901157646)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".presentation.ui.GithubAuthActivity">
+
+
+    <ImageView
+        android:layout_width="65dp"
+        android:layout_height="65dp"
+        android:adjustViewBounds="true"
+        android:src="@drawable/ic_github_icon"
+        app:layout_constraintBottom_toBottomOf="@+id/progressBar"
+        app:layout_constraintEnd_toEndOf="@+id/progressBar"
+        app:layout_constraintStart_toStartOf="@+id/progressBar"
+        app:layout_constraintTop_toTopOf="@+id/progressBar" />
+
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="100dp"
+        android:layout_height="100dp"
+        android:indeterminate="true"
+        android:indeterminateTint="@color/blue"
+        app:layout_constraintBottom_toTopOf="@+id/textView"
+        app:layout_constraintEnd_toEndOf="@+id/textView"
+        app:layout_constraintStart_toStartOf="@+id/textView" />
+
+    <TextView
+        android:id="@+id/textView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/github_loading_text"
+        android:gravity="center"
+        android:textColor="@color/black"
+        android:textSize="16sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/UserIsAuthenticated.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/UserIsAuthenticated.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/UserIsAuthenticated.kt
new file mode 100644
--- /dev/null	(date 1647185278130)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/UserIsAuthenticated.kt	(date 1647185278130)
@@ -0,0 +1,16 @@
+package com.github.bgrebennikov.devbuff.domain.useCases
+
+import com.github.bgrebennikov.devbuff.common.USER_ACCESS_TOKEN
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreHelper
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreRepository
+import javax.inject.Inject
+
+class UserIsAuthenticated @Inject constructor(
+    private val helper: DataStoreHelper
+) {
+
+    suspend operator fun invoke() : Boolean{
+        return helper.getLoggedInStatus()
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/binding/ProfileBindingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/binding/ProfileBindingAdapter.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/binding/ProfileBindingAdapter.kt
new file mode 100644
--- /dev/null	(date 1647625941313)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/binding/ProfileBindingAdapter.kt	(date 1647625941313)
@@ -0,0 +1,68 @@
+package com.github.bgrebennikov.devbuff.presentation.ui.adapters.binding
+
+import android.view.View
+import android.widget.ImageView
+import android.widget.ProgressBar
+import android.widget.TextView
+import androidx.databinding.BindingAdapter
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.resource.bitmap.CenterCrop
+import com.bumptech.glide.load.resource.bitmap.RoundedCorners
+import com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions.withCrossFade
+import com.github.bgrebennikov.devbuff.R
+import com.github.bgrebennikov.devbuff.common.STAGED_BASE_IMAGE_URL
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.runBlocking
+
+@BindingAdapter(
+    value = [
+        "profileImageFromUserID"
+    ],
+    requireAll = false
+)
+fun setProfileImage(imageView: ImageView, userId: String?){
+
+    val context = imageView.context
+    val imageUrl = "$STAGED_BASE_IMAGE_URL/$userId"
+
+    runCatching {
+        Glide.with(context)
+            .load(imageUrl)
+            .transform(
+                CenterCrop(),
+                RoundedCorners(
+                    context.resources.getDimensionPixelOffset(R.dimen.corners_radius_large)
+                )
+            )
+            .transition(withCrossFade())
+            .override(
+                context.resources.getDimensionPixelOffset(R.dimen.profile_image_size)
+            )
+            .into(imageView)
+    }
+
+}
+
+@BindingAdapter("username")
+fun setUsername(textView: TextView, username: String?){
+    with(textView){
+        text = context.getString(R.string.username_prefix).format(username)
+    }
+
+}
+
+@BindingAdapter(
+    value = ["firstName", "lastName"],
+    requireAll = false
+)
+fun setFullName(textView: TextView, firstName: String?, lastName: String?){
+    textView.text = "%s %s".format(
+        firstName ?: "",
+        lastName ?: ""
+    )
+}
+
+@BindingAdapter("ideaDetailsLoading")
+fun ideaDetailsLoading(progressBar: ProgressBar, isLoading: Boolean){
+    progressBar.visibility = if (isLoading) View.VISIBLE else View.GONE
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/GlideImageGetter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/GlideImageGetter.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/GlideImageGetter.kt
new file mode 100644
--- /dev/null	(date 1648319071886)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/GlideImageGetter.kt	(date 1648319071886)
@@ -0,0 +1,175 @@
+package com.github.bgrebennikov.devbuff.presentation.ui.fragments.base
+
+import android.graphics.*
+import android.graphics.drawable.BitmapDrawable
+import android.graphics.drawable.ColorDrawable
+import android.graphics.drawable.Drawable
+import android.net.Uri
+import android.text.Html
+import android.widget.TextView
+import androidx.appcompat.content.res.AppCompatResources
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.engine.DiskCacheStrategy
+import com.bumptech.glide.request.Request
+import com.bumptech.glide.request.RequestOptions
+import com.bumptech.glide.request.target.SizeReadyCallback
+import com.bumptech.glide.request.target.Target
+import com.bumptech.glide.request.target.Target.SIZE_ORIGINAL
+import com.bumptech.glide.request.transition.Transition
+import com.github.bgrebennikov.devbuff.R
+import java.lang.ref.WeakReference
+
+class GlideImageGetter(
+    textView: TextView,
+    private val density: Float = textView.resources.displayMetrics.density
+) : Html.ImageGetter {
+
+    private val container: WeakReference<TextView> = WeakReference(textView)
+
+    override fun getDrawable(source: String): Drawable {
+
+        val drawable = BitmapDrawablePlaceholder()
+
+        // Load Image to the Drawable
+        container.get()?.apply {
+            post {
+                runCatching {
+                    Glide.with(context)
+                        .asBitmap()
+                        .diskCacheStrategy(DiskCacheStrategy.NONE)
+                        .load(Uri.parse(source))
+                        .into(drawable)
+                }.getOrElse {
+                    Glide.with(context)
+                        .asBitmap()
+                        .load(AppCompatResources.getDrawable(context, R.drawable.bg_gradient))
+                        .into(drawable)
+                }
+            }
+        }
+
+        return drawable
+    }
+
+    private inner class BitmapDrawablePlaceholder : BitmapDrawable(
+        container.get()?.resources,
+        Bitmap.createBitmap(1, 1, Bitmap.Config.RGB_565)
+    ), Target<Bitmap> {
+
+
+        val measureSize = container.get()?.measuredWidth ?: 0
+        private var drawable: Drawable? = null
+
+
+        private fun setDrawable(drawable: Drawable, width: Int? = null, height: Int? = null) {
+            this.drawable = drawable
+            this.drawable?.let { value ->
+
+                val drawableWidth = width ?: (drawable.intrinsicWidth / 3 * density).toInt()
+                val drawableHeight = height ?: (drawable.intrinsicHeight / 3 * density).toInt()
+
+                val maxWidth = container.get()?.measuredWidth ?: 0
+
+                if (drawableWidth > maxWidth) {
+                    val calculatedHeight = maxWidth * drawableHeight / drawableWidth
+                    value.setBounds(0, 0, maxWidth, calculatedHeight)
+                    setBounds(0, 0, maxWidth, calculatedHeight)
+                } else {
+                    value.setBounds(0, 0, drawableWidth, drawableHeight)
+                    setBounds(0, 0, drawableWidth, drawableHeight)
+                }
+                container.get()?.text = container.get()?.text
+            }
+        }
+
+        override fun draw(canvas: Canvas) {
+            drawable?.draw(canvas)
+        }
+
+        override fun onLoadStarted(placeholderDrawable: Drawable?) {
+            setPlaceholder()
+        }
+
+        override fun onLoadFailed(errorDrawable: Drawable?) {
+
+        }
+
+        override fun onResourceReady(bitmap: Bitmap, transition: Transition<in Bitmap>?) {
+            val transformedBitmap = Bitmap.createBitmap(
+                bitmap.width,
+                bitmap.height + (container.get()?.paint?.fontMetricsInt?.bottom ?: 0) * 2,
+                Bitmap.Config.ARGB_8888
+            )
+            val canvas = Canvas(transformedBitmap)
+            canvas.drawBitmap(
+                bitmap,
+                0f,
+                container.get()?.paint?.fontMetricsInt?.bottom?.toFloat() ?: 0f,
+                null
+            )
+            val imageDrawable = BitmapDrawable(
+                container.get()?.resources ?: return,
+                transformedBitmap
+            )
+
+            setDrawable(imageDrawable)
+        }
+
+        private fun setPlaceholder(placeholderBitmap: Bitmap? = null, placeholderColor: Int = Color.LTGRAY) {
+
+
+            val transformedBitmap = Bitmap.createBitmap(
+                measureSize,
+                measureSize,
+                Bitmap.Config.ARGB_8888
+            )
+            val canvas = Canvas(transformedBitmap)
+            canvas.apply {
+                if (placeholderBitmap != null) {
+                    drawBitmap(
+                        placeholderBitmap,
+                        0f,
+                        container.get()?.paint?.fontMetricsInt?.bottom?.toFloat() ?: 0f,
+                        null
+                    )
+                } else{
+                    val paint = Paint().apply {
+                        color = placeholderColor
+                        style = Paint.Style.FILL
+                    }
+                    drawPaint(
+                        paint
+                    )
+                }
+            }
+
+            val imageDrawable = BitmapDrawable(
+                container.get()?.resources,
+                transformedBitmap
+            )
+
+            setDrawable(imageDrawable, measureSize, (measureSize / 3 * density).toInt())
+
+        }
+
+        override fun onLoadCleared(placeholderDrawable: Drawable?) {
+            placeholderDrawable?.let {
+                drawable = it
+            }
+        }
+
+        override fun getSize(sizeReadyCallback: SizeReadyCallback) {
+            sizeReadyCallback.onSizeReady(SIZE_ORIGINAL, SIZE_ORIGINAL)
+        }
+
+        override fun removeCallback(cb: SizeReadyCallback) {}
+        override fun setRequest(request: Request?) {}
+        override fun getRequest(): Request? {
+            return null
+        }
+
+        override fun onStart() {}
+        override fun onStop() {}
+        override fun onDestroy() {}
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ChipsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ChipsAdapter.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ChipsAdapter.kt
new file mode 100644
--- /dev/null	(date 1646739115571)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/ChipsAdapter.kt	(date 1646739115571)
@@ -0,0 +1,13 @@
+package com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore
+
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.base.BaseDiffUtilItemCallback
+import com.hannesdorfmann.adapterdelegates4.AsyncListDifferDelegationAdapter
+
+class ChipsAdapter : AsyncListDifferDelegationAdapter<ListItem>(BaseDiffUtilItemCallback()) {
+    init {
+        delegatesManager
+            .addDelegate(ExploreAdapterDelegate.ideaChipItem())
+            .addDelegate(ExploreAdapterDelegate.ideaChipLanguagesItem())
+            .addDelegate(ExploreAdapterDelegate.ideaChipTechnologiesItem())
+    }
+}
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/ApiResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/ApiResponse.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/ApiResponse.kt
new file mode 100644
--- /dev/null	(date 1647165728937)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/ApiResponse.kt	(date 1647165728937)
@@ -0,0 +1,32 @@
+package com.github.bgrebennikov.devbuff.data
+
+import com.github.bgrebennikov.devbuff.data.local.Status
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
+
+data class ApiResponse<out T>(
+    val status : Status,
+    val data: T?,
+    val message : String?
+) {
+    companion object{
+
+        fun <T> success(data: T) = ApiResponse(
+            status = Status.SUCCESS,
+            data = data,
+            message = null
+        )
+
+        fun <T> error(data: T?, message: String) = ApiResponse(
+            status = Status.ERROR,
+            data = data,
+            message = message,
+        )
+
+        fun <T> loading(data: T?) = ApiResponse(
+            status = Status.LOADING,
+            data = data,
+            message = null
+        )
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/local/Status.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/Status.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/Status.kt
new file mode 100644
--- /dev/null	(date 1647163426004)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/local/Status.kt	(date 1647163426004)
@@ -0,0 +1,7 @@
+package com.github.bgrebennikov.devbuff.data.local
+
+enum class Status {
+    SUCCESS,
+    ERROR,
+    LOADING
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/auth/TokenModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/auth/TokenModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/auth/TokenModel.kt
new file mode 100644
--- /dev/null	(date 1647621119403)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/auth/TokenModel.kt	(date 1647621119403)
@@ -0,0 +1,8 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.auth
+
+import com.google.gson.annotations.SerializedName
+
+data class TokenModel(
+    @SerializedName("access_token")
+    val access_token : String
+)
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/TokenServiceImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/TokenServiceImpl.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/TokenServiceImpl.kt
new file mode 100644
--- /dev/null	(date 1647770756153)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/TokenServiceImpl.kt	(date 1647770756153)
@@ -0,0 +1,32 @@
+package com.github.bgrebennikov.devbuff.domain
+
+import com.github.bgrebennikov.devbuff.data.ApiResponse
+import com.github.bgrebennikov.devbuff.data.remote.TokenService
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.TokenModel
+import javax.inject.Inject
+
+class TokenServiceImpl @Inject constructor(
+    private val tokenService: TokenService
+) : TokenServiceRepository {
+    override suspend fun updateToken(accessToken: String, refreshToken: String?): ApiResponse<AuthConfig> {
+
+
+        val result = try {
+            ApiResponse.success(
+                data = tokenService.updateToken(
+                    authHeader = "Bearer $accessToken",
+                    refreshToken = refreshToken!!
+                )
+            )
+        } catch (e : Exception){
+            ApiResponse.error(
+                data = null,
+                message = e.localizedMessage ?: "Error Occurred!"
+            )
+        }
+
+        return result
+
+    }
+}
\ No newline at end of file
Index: app/src/main/res/navigation/nav_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/nav_main\"\n    app:startDestination=\"@id/exploreFragment\">\n\n    <fragment\n        android:id=\"@+id/exploreFragment\"\n        android:name=\"com.github.bgrebennikov.devbuff.presentation.ui.fragments.ExploreFragment\"\n        android:label=\"@string/explore\"\n        tools:layout=\"@layout/fragment_explore\" />\n    <fragment\n        android:id=\"@+id/myIdeasFragment\"\n        android:name=\"com.github.bgrebennikov.devbuff.presentation.ui.fragments.MyIdeasFragment\"\n        android:label=\"fragment_my_ideas\"\n        tools:layout=\"@layout/fragment_my_ideas\" />\n    <fragment\n        android:id=\"@+id/newIdeaFragment\"\n        android:name=\"com.github.bgrebennikov.devbuff.presentation.ui.fragments.NewIdeaFragment\"\n        android:label=\"fragment_new_idea\"\n        tools:layout=\"@layout/fragment_new_idea\" />\n    <fragment\n        android:id=\"@+id/settingsFragment\"\n        android:name=\"com.github.bgrebennikov.devbuff.presentation.ui.fragments.SettingsFragment\"\n        android:label=\"fragment_settings\"\n        tools:layout=\"@layout/fragment_settings\" />\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/nav_main.xml b/app/src/main/res/navigation/nav_main.xml
--- a/app/src/main/res/navigation/nav_main.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/navigation/nav_main.xml	(date 1647257760675)
@@ -9,7 +9,11 @@
         android:id="@+id/exploreFragment"
         android:name="com.github.bgrebennikov.devbuff.presentation.ui.fragments.ExploreFragment"
         android:label="@string/explore"
-        tools:layout="@layout/fragment_explore" />
+        tools:layout="@layout/fragment_explore" >
+        <action
+            android:id="@+id/action_exploreFragment_to_ideaDetailsFragment"
+            app:destination="@id/ideaDetailsFragment" />
+    </fragment>
     <fragment
         android:id="@+id/myIdeasFragment"
         android:name="com.github.bgrebennikov.devbuff.presentation.ui.fragments.MyIdeasFragment"
@@ -25,4 +29,16 @@
         android:name="com.github.bgrebennikov.devbuff.presentation.ui.fragments.SettingsFragment"
         android:label="fragment_settings"
         tools:layout="@layout/fragment_settings" />
+    <fragment
+        android:id="@+id/ideaDetailsFragment"
+        android:name="com.github.bgrebennikov.devbuff.presentation.ui.fragments.IdeaDetailsFragment"
+        android:label="fragment_idea_details"
+        tools:layout="@layout/fragment_idea_details" >
+        <action
+            android:id="@+id/action_ideaDetailsFragment_to_exploreFragment"
+            app:destination="@id/exploreFragment" />
+        <argument
+            android:name="ideaInfo"
+            app:argType="com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel" />
+    </fragment>
 </navigation>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaStatus.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaStatus.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaStatus.kt
new file mode 100644
--- /dev/null	(date 1648122845627)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaStatus.kt	(date 1648122845627)
@@ -0,0 +1,11 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.explore
+
+import com.google.gson.annotations.SerializedName
+
+enum class IdeaStatus(
+    val value: String
+) {
+    WAITING_FULL_TEAM("WAITING_FULL_TEAM"),
+    PUBLISH("PUBLISH")
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/TokenServiceRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/TokenServiceRepository.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/TokenServiceRepository.kt
new file mode 100644
--- /dev/null	(date 1647770756176)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/TokenServiceRepository.kt	(date 1647770756176)
@@ -0,0 +1,11 @@
+package com.github.bgrebennikov.devbuff.domain
+
+import com.github.bgrebennikov.devbuff.data.ApiResponse
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.TokenModel
+
+interface TokenServiceRepository {
+
+    suspend fun updateToken(accessToken : String, refreshToken: String?) : ApiResponse<AuthConfig>?
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/BaseFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.ui.fragments.base\n\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.databinding.ViewDataBindingKtx\nimport androidx.fragment.app.Fragment\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.viewbinding.ViewBinding\nimport com.github.bgrebennikov.devbuff.BaseApplication\nimport javax.inject.Inject\n\nopen class BaseFragment<T : ViewBinding>(\n    private val inflateMethod : (LayoutInflater, ViewGroup?, Boolean) -> T\n) : Fragment() {\n\n    val component by lazy {\n        (requireActivity().application as BaseApplication).component\n    }\n\n    @Inject\n    lateinit var viewModelFactory: ViewModelProvider.Factory\n\n    private var _binding: T? = null\n    private val binding get() = _binding!!\n\n    open fun onBind(binding: T) = Unit\n\n    override fun onCreateView(\n        inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View {\n        _binding = inflateMethod.invoke(inflater, container, false)\n        onBind(binding)\n        return binding.root\n    }\n\n    override fun onDestroyView() {\n        super.onDestroyView()\n        _binding = null\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/BaseFragment.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/BaseFragment.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/BaseFragment.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/base/BaseFragment.kt	(date 1647006062920)
@@ -23,7 +23,7 @@
     lateinit var viewModelFactory: ViewModelProvider.Factory
 
     private var _binding: T? = null
-    private val binding get() = _binding!!
+    val binding get() = _binding!!
 
     open fun onBind(binding: T) = Unit
 
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/TokenService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/TokenService.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/TokenService.kt
new file mode 100644
--- /dev/null	(date 1647770756160)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/TokenService.kt	(date 1647770756160)
@@ -0,0 +1,20 @@
+package com.github.bgrebennikov.devbuff.data.remote
+
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.TokenModel
+import retrofit2.http.Header
+import retrofit2.http.Headers
+import retrofit2.http.POST
+import retrofit2.http.Query
+
+interface TokenService {
+
+
+    @POST("oAuth/update")
+    suspend fun updateToken(
+        @Header("Authorization") authHeader : String,
+        @Query("refresh_token") refreshToken: String,
+        @Query("grant_type") grantType: String? = "refresh_token"
+    ) : AuthConfig
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/header_title_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/header_title_item.xml b/app/src/main/res/layout/header_title_item.xml
new file mode 100644
--- /dev/null	(date 1647514716673)
+++ b/app/src/main/res/layout/header_title_item.xml	(date 1647514716673)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <data>
+        <variable
+            name="title"
+            type="String" />
+    </data>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            tools:text="Explore"
+            android:text="@{title}"
+            style="@style/TitleDefault"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            android:padding="@dimen/padding_default" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/HeaderItemModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/HeaderItemModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/HeaderItemModel.kt
new file mode 100644
--- /dev/null	(date 1647514789746)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/explore/HeaderItemModel.kt	(date 1647514789746)
@@ -0,0 +1,8 @@
+package com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore
+
+data class HeaderItemModel(
+    val title: String
+) : ListItem{
+    override val itemId: Int
+        get() = this.title.hashCode()
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/UserViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/UserViewModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/UserViewModel.kt
new file mode 100644
--- /dev/null	(date 1647167379557)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/viewModels/UserViewModel.kt	(date 1647167379557)
@@ -0,0 +1,59 @@
+package com.github.bgrebennikov.devbuff.presentation.viewModels
+
+import android.util.Log
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.viewModelScope
+import com.github.bgrebennikov.devbuff.common.TAG
+import com.github.bgrebennikov.devbuff.data.ApiResponse
+import com.github.bgrebennikov.devbuff.data.remote.models.user.UserProfileModel
+import com.github.bgrebennikov.devbuff.domain.useCases.UserProfileUseCase
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import javax.inject.Inject
+import javax.inject.Singleton
+
+@Singleton
+class UserViewModel @Inject constructor(
+    private val profileUseCase: UserProfileUseCase
+) : ViewModel() {
+
+    private val _userData = MutableLiveData<ApiResponse<UserProfileModel>>()
+    val userData : LiveData<ApiResponse<UserProfileModel>> = _userData
+
+    init {
+        Log.i(TAG, "UserViewModel: $this")
+    }
+
+    fun loadUser() {
+        viewModelScope.launch(Dispatchers.IO) {
+
+            try{
+                _userData.postValue(
+                    ApiResponse.success(
+                        data = profileUseCase.invoke()
+                    )
+                )
+            } catch (e : Exception){
+                _userData.postValue(
+                    ApiResponse.error(
+                        message = e.localizedMessage ?: "Error loading profile",
+                        data = null
+                    )
+                )
+            }
+
+        }
+    }
+
+//    fun loadUser() {
+//        viewModelScope.launch {
+//            _userData.postValue(
+//                profileUseCase.invoke()
+//            )
+//        }
+//    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreHelperImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreHelperImpl.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreHelperImpl.kt
new file mode 100644
--- /dev/null	(date 1647622192843)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreHelperImpl.kt	(date 1647622192843)
@@ -0,0 +1,56 @@
+package com.github.bgrebennikov.devbuff.data.dataStore
+
+import com.github.bgrebennikov.devbuff.common.USER_ACCESS_TOKEN
+import com.github.bgrebennikov.devbuff.common.USER_REFRESH_TOKEN
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+import kotlinx.coroutines.runBlocking
+import javax.inject.Inject
+
+class DataStoreHelperImpl @Inject constructor(
+    private val repositoryDs: DataStoreRepository
+) : DataStoreHelper {
+
+
+
+    override suspend fun getLoggedInStatus(): Boolean {
+        return repositoryDs.getString(USER_ACCESS_TOKEN) != null
+    }
+
+    override fun getAccessToken(): String? {
+        return runBlocking {
+            repositoryDs.getString(USER_ACCESS_TOKEN)
+        }
+    }
+
+    override fun getRefreshToken(): String? {
+        return runBlocking {
+            repositoryDs.getString(USER_REFRESH_TOKEN)
+        }
+    }
+
+    override fun setAccessToken(token: String) {
+        runBlocking {
+            repositoryDs.putString(USER_ACCESS_TOKEN, token)
+        }
+    }
+
+    override fun setRefreshToken(refreshToken: String) {
+        runBlocking {
+            repositoryDs.putString(USER_REFRESH_TOKEN, refreshToken)
+        }
+    }
+
+    override fun storeUserModel(config: AuthConfig) {
+        setAccessToken(config.access_token)
+        setRefreshToken(config.refresh_token)
+
+    }
+
+    override fun clearAll() {
+        runBlocking {
+            repositoryDs.clearAll()
+        }
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/UserProfileUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/UserProfileUseCase.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/UserProfileUseCase.kt
new file mode 100644
--- /dev/null	(date 1646920314710)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/UserProfileUseCase.kt	(date 1646920314710)
@@ -0,0 +1,15 @@
+package com.github.bgrebennikov.devbuff.domain.useCases
+
+import com.github.bgrebennikov.devbuff.data.remote.models.user.UserProfileModel
+import com.github.bgrebennikov.devbuff.domain.user.UserRemoteRepository
+import javax.inject.Inject
+
+class UserProfileUseCase @Inject constructor(
+    private val repository: UserRemoteRepository
+) {
+
+    suspend operator fun invoke() : UserProfileModel{
+        return repository.getProfile()
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/ExploreFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.ui.fragments\n\nimport android.content.Context\nimport android.os.Bundle\nimport android.util.Log\nimport androidx.fragment.app.Fragment\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport com.github.bgrebennikov.devbuff.R\nimport com.github.bgrebennikov.devbuff.common.TAG\nimport com.github.bgrebennikov.devbuff.data.models.IdeaModel\nimport com.github.bgrebennikov.devbuff.databinding.FragmentExploreBinding\nimport com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ExploreAdapter\nimport com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.BaseFragment\nimport com.github.bgrebennikov.devbuff.presentation.viewModels.ExploreViewModel\n\nclass ExploreFragment : BaseFragment<FragmentExploreBinding>(FragmentExploreBinding::inflate) {\n\n    private val viewModel by lazy {\n        viewModelFactory.create(ExploreViewModel::class.java)\n    }\n\n    private val adapter = ExploreAdapter()\n\n    override fun onAttach(context: Context) {\n        super.onAttach(context)\n        component.inject(this)\n    }\n\n    override fun onBind(binding: FragmentExploreBinding) {\n        super.onBind(binding)\n\n        binding.ideasListRecycler.adapter = adapter\n        binding.ideasListRecycler.setHasFixedSize(true)\n\n\n        viewModel.ideas.observe(viewLifecycleOwner){ ideasList ->\n            adapter.items = ideasList\n        }\n\n\n\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/ExploreFragment.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/ExploreFragment.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/ExploreFragment.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/ExploreFragment.kt	(date 1647517802993)
@@ -3,17 +3,25 @@
 import android.content.Context
 import android.os.Bundle
 import android.util.Log
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
 import android.view.View
-import android.view.ViewGroup
+import android.widget.Toast
+import androidx.navigation.fragment.findNavController
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
 import com.github.bgrebennikov.devbuff.R
 import com.github.bgrebennikov.devbuff.common.TAG
-import com.github.bgrebennikov.devbuff.data.models.IdeaModel
+import com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel
+import com.github.bgrebennikov.devbuff.data.local.Status
 import com.github.bgrebennikov.devbuff.databinding.FragmentExploreBinding
 import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ExploreAdapter
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.HeaderItemModel
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
 import com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.BaseFragment
+import com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.ExploreClickListener
 import com.github.bgrebennikov.devbuff.presentation.viewModels.ExploreViewModel
+import kotlinx.coroutines.CoroutineScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
 
 class ExploreFragment : BaseFragment<FragmentExploreBinding>(FragmentExploreBinding::inflate) {
 
@@ -24,23 +32,56 @@
     private val adapter = ExploreAdapter()
 
     override fun onAttach(context: Context) {
-        super.onAttach(context)
         component.inject(this)
+        super.onAttach(context)
+
     }
 
-    override fun onBind(binding: FragmentExploreBinding) {
-        super.onBind(binding)
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        val sharedPool = RecyclerView.RecycledViewPool()
+        sharedPool.setMaxRecycledViews(0, 30)
+        val layoutManager = LinearLayoutManager(context, LinearLayoutManager.VERTICAL, false)
+        layoutManager.initialPrefetchItemCount = 3
 
-        binding.ideasListRecycler.adapter = adapter
-        binding.ideasListRecycler.setHasFixedSize(true)
+        with(binding){
+            ideasListRecycler.layoutManager = layoutManager
+            ideasListRecycler.setRecycledViewPool(sharedPool)
+            ideasListRecycler.adapter = adapter
+            ideasListRecycler.setHasFixedSize(true)
+            ideasListRecycler.setItemViewCacheSize(1024)
+        }
 
 
-        viewModel.ideas.observe(viewLifecycleOwner){ ideasList ->
-            adapter.items = ideasList
+        viewModel.ideas.observe(viewLifecycleOwner){
+            it.let { apiResponse ->
+                when(apiResponse.status){
+                    Status.SUCCESS -> apiResponse.data?.let { ideas ->
+                        adapter.items = ideas
+                    }
+                    Status.LOADING -> apiResponse.data?.let { placeholder ->
+                        adapter.items = placeholder
+                    }
+                    Status.ERROR -> {
+                        Toast.makeText(context, it.message, Toast.LENGTH_LONG).show()
+                    }
+                }
+            }
         }
 
 
+        adapter.listener = object : ExploreClickListener{
+            override fun onClickIdeaItem(idea: SimpleIdeaModel) {
+                findNavController()
+                    .navigate(
+                        ExploreFragmentDirections.actionExploreFragmentToIdeaDetailsFragment(idea)
+                    )
+            }
 
+        }
     }
+
 
 }
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/user/UserRemoteRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/user/UserRemoteRepositoryImpl.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/user/UserRemoteRepositoryImpl.kt
new file mode 100644
--- /dev/null	(date 1647177687210)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/user/UserRemoteRepositoryImpl.kt	(date 1647177687210)
@@ -0,0 +1,20 @@
+package com.github.bgrebennikov.devbuff.domain.user
+
+import com.github.bgrebennikov.devbuff.data.remote.UserApiService
+import com.github.bgrebennikov.devbuff.data.remote.models.user.UserProfileModel
+import javax.inject.Inject
+
+class UserRemoteRepositoryImpl @Inject constructor(
+    private val userApi: UserApiService
+) : UserRemoteRepository {
+
+    override suspend fun getProfile(): UserProfileModel {
+        return userApi.getProfile()
+    }
+
+    override suspend fun updateToken(refreshToken: String): String {
+        return userApi.refresh(refreshToken)
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_explore.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    tools:context=\".presentation.ui.fragments.ExploreFragment\"\n    android:background=\"@color/gray_light\">\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/ideasListRecycler\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        tools:listitem=\"@layout/item_idea\"\n        app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\n        />\n\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_explore.xml b/app/src/main/res/layout/fragment_explore.xml
--- a/app/src/main/res/layout/fragment_explore.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/layout/fragment_explore.xml	(date 1647514404040)
@@ -1,18 +1,19 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    tools:context=".presentation.ui.fragments.ExploreFragment"
-    android:background="@color/gray_light">
+    android:background="@color/gray_light"
+    android:fitsSystemWindows="true"
+    tools:context=".presentation.ui.fragments.guest.GuestExploreFragment">
 
     <androidx.recyclerview.widget.RecyclerView
         android:id="@+id/ideasListRecycler"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        tools:listitem="@layout/item_idea"
-        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-        />
+        android:nestedScrollingEnabled="true"
+        app:layout_constraintTop_toTopOf="parent"
+        tools:listitem="@layout/item_idea" />
 
-</FrameLayout>
\ No newline at end of file
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreHelper.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreHelper.kt
new file mode 100644
--- /dev/null	(date 1647251240400)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreHelper.kt	(date 1647251240400)
@@ -0,0 +1,17 @@
+package com.github.bgrebennikov.devbuff.data.dataStore
+
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+
+interface DataStoreHelper {
+
+    suspend fun getLoggedInStatus(): Boolean
+    fun getAccessToken(): String?
+    fun getRefreshToken(): String?
+
+    fun setAccessToken(token: String)
+    fun setRefreshToken(refreshToken: String)
+
+    fun storeUserModel(config: AuthConfig)
+    fun clearAll()
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/user/UserRemoteRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/user/UserRemoteRepository.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/user/UserRemoteRepository.kt
new file mode 100644
--- /dev/null	(date 1647177613946)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/user/UserRemoteRepository.kt	(date 1647177613946)
@@ -0,0 +1,11 @@
+package com.github.bgrebennikov.devbuff.domain.user
+
+import com.github.bgrebennikov.devbuff.data.remote.models.user.UserProfileModel
+
+interface UserRemoteRepository {
+
+    suspend fun getProfile() : UserProfileModel
+
+    suspend fun updateToken(refreshToken : String) : String
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/di/qualifiers/DataStorage.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/di/qualifiers/DataStorage.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/di/qualifiers/DataStorage.kt
new file mode 100644
--- /dev/null	(date 1646819890333)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/di/qualifiers/DataStorage.kt	(date 1646819890333)
@@ -0,0 +1,7 @@
+package com.github.bgrebennikov.devbuff.di.qualifiers
+
+import javax.inject.Qualifier
+
+@Qualifier
+@Retention(AnnotationRetention.RUNTIME)
+annotation class DataStorage
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/GuestActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/GuestActivity.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/GuestActivity.kt
new file mode 100644
--- /dev/null	(date 1646906356083)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/GuestActivity.kt	(date 1646906356083)
@@ -0,0 +1,35 @@
+package com.github.bgrebennikov.devbuff.presentation.ui
+
+import android.content.Intent
+import android.net.Uri
+import androidx.appcompat.app.AppCompatActivity
+import android.os.Bundle
+import com.github.bgrebennikov.devbuff.R
+import com.github.bgrebennikov.devbuff.databinding.ActivityGuestBinding
+
+class GuestActivity : AppCompatActivity() {
+
+    private val binding by lazy{
+        ActivityGuestBinding.inflate(layoutInflater)
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(binding.root)
+
+        binding.gitLogin.setOnClickListener{
+            githubAuth()
+        }
+    }
+
+    private fun githubAuth(){
+        startActivity(
+            Intent(
+                Intent.ACTION_VIEW,
+                Uri.parse(getString(R.string.api_endpoint_guthub_auth))
+            )
+        )
+        finish()
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/BaseApplication.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff\n\nimport android.app.Application\nimport com.github.bgrebennikov.devbuff.di.DaggerAppComponent\n\nclass BaseApplication : Application() {\n\n    val component by lazy {\n        DaggerAppComponent.create()\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/BaseApplication.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/BaseApplication.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/BaseApplication.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/BaseApplication.kt	(date 1647619893703)
@@ -1,12 +1,31 @@
 package com.github.bgrebennikov.devbuff
 
 import android.app.Application
+import androidx.lifecycle.ViewModelProvider
 import com.github.bgrebennikov.devbuff.di.DaggerAppComponent
+import com.github.bgrebennikov.devbuff.presentation.viewModels.AuthViewModel
+import javax.inject.Inject
 
 class BaseApplication : Application() {
 
     val component by lazy {
-        DaggerAppComponent.create()
+        DaggerAppComponent.builder()
+            .application(this)
+            .dataStorage(DATA_STORAGE_NAME)
+            .build()
+    }
+
+
+    private val authViewModel by lazy {
+        viewModelFactory.create(AuthViewModel::class.java)
+    }
+
+
+    @Inject
+    lateinit var viewModelFactory : ViewModelProvider.Factory
+
+    companion object{
+        private const val DATA_STORAGE_NAME = "devbuff_ds"
     }
 
 }
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/DataStoreRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/DataStoreRepositoryImpl.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/DataStoreRepositoryImpl.kt
new file mode 100644
--- /dev/null	(date 1647251240383)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/DataStoreRepositoryImpl.kt	(date 1647251240383)
@@ -0,0 +1,69 @@
+package com.github.bgrebennikov.devbuff.domain
+
+import android.app.Application
+import android.content.Context
+import android.content.SharedPreferences
+import androidx.datastore.core.DataStore
+import androidx.datastore.preferences.core.*
+import androidx.datastore.preferences.preferencesDataStore
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreRepository
+import com.github.bgrebennikov.devbuff.di.qualifiers.DataStorage
+import kotlinx.coroutines.flow.first
+import javax.inject.Inject
+
+
+class DataStoreRepositoryImpl @Inject constructor(
+    private val context: Application,
+    @DataStorage private val dataStorageName: String
+) : DataStoreRepository {
+
+    private val Context.dataStore: DataStore<Preferences> by preferencesDataStore(name = dataStorageName)
+
+    override suspend fun putString(key: String, value: String) {
+        val pKey = stringPreferencesKey(key)
+        with(context){
+            dataStore.edit { prefs ->
+                prefs[pKey] = value
+            }
+        }
+    }
+
+    override suspend fun putInt(key: String, value: Int) {
+        with(context){
+            dataStore.edit { prefs ->
+                prefs[intPreferencesKey(key)] = value
+            }
+        }
+    }
+
+    override suspend fun getString(key: String): String? {
+        val pKey = stringPreferencesKey(key)
+        val data = context.dataStore.data.first()
+        return data[pKey]
+    }
+
+    override suspend fun getInt(key: String): Int? =
+        context.dataStore.data.first()[intPreferencesKey(key)]
+
+    override suspend fun putLong(key: String, value: Long) {
+        with(context.dataStore){
+            edit { prefs ->
+                prefs[longPreferencesKey(key)] = value
+            }
+        }
+    }
+
+    override suspend fun getLong(key: String): Long? =
+        context.dataStore.data.first()[longPreferencesKey(key)]
+
+    override suspend fun clearAll() {
+        context.dataStore.edit { it.clear() }
+    }
+
+    override suspend fun clear(key: String) {
+        TODO()
+    }
+
+
+}
+
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreRepository.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreRepository.kt
new file mode 100644
--- /dev/null	(date 1647251124346)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/dataStore/DataStoreRepository.kt	(date 1647251124346)
@@ -0,0 +1,18 @@
+package com.github.bgrebennikov.devbuff.data.dataStore
+
+interface DataStoreRepository {
+
+    suspend fun putString(key : String, value: String)
+    suspend fun putInt(key : String, value: Int)
+
+    suspend fun getString(key : String) : String?
+    suspend fun getInt(key : String) : Int?
+
+    suspend fun putLong(key : String, value: Long)
+    suspend fun getLong(key: String) : Long?
+
+    suspend fun clearAll()
+    suspend fun clear(key: String)
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_guest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_guest.xml b/app/src/main/res/layout/activity_guest.xml
new file mode 100644
--- /dev/null	(date 1647619774730)
+++ b/app/src/main/res/layout/activity_guest.xml	(date 1647619774730)
@@ -0,0 +1,101 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".presentation.ui.GuestActivity"
+    android:background="#f2f2f2"
+    >
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/appBarLayout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toTopOf="@+id/nav_container"
+        >
+        <androidx.appcompat.widget.Toolbar
+            style="@style/ToolbarMainStyle"
+            android:id="@+id/main_toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:elevation="0dp"
+            >
+            <androidx.constraintlayout.widget.ConstraintLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                >
+                <ImageView
+                    app:layout_constraintTop_toTopOf="parent"
+                    app:layout_constraintStart_toStartOf="parent"
+                    android:layout_width="100dp"
+                    android:layout_height="0dp"
+                    app:layout_constraintDimensionRatio="0:1"
+                    android:src="@drawable/ic_devbuff_logo"
+                    tools:ignore="ContentDescription"
+                    />
+            </androidx.constraintlayout.widget.ConstraintLayout>
+        </androidx.appcompat.widget.Toolbar>
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.fragment.app.FragmentContainerView
+        android:id="@+id/nav_container"
+        android:name="androidx.navigation.fragment.NavHostFragment"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/appBarLayout"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:defaultNavHost="true"
+        app:navGraph="@navigation/nav_guest"
+        />
+
+
+    <androidx.cardview.widget.CardView
+        android:id="@+id/guest_buttons"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:layout_marginBottom="@dimen/margin_default"
+        app:cardBackgroundColor="@color/white"
+        app:cardCornerRadius="@dimen/corners_radius_default"
+        >
+        <LinearLayout
+            android:id="@+id/gitLogin"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:gravity="center_vertical"
+            android:clickable="true"
+            android:focusable="true"
+            android:foreground="?attr/selectableItemBackground"
+            android:padding="@dimen/padding_small"
+            >
+            <ImageView
+                android:layout_width="32dp"
+                android:layout_height="32dp"
+                android:src="@drawable/ic_github_icon"
+                android:adjustViewBounds="true"
+                android:scaleType="centerCrop"
+                android:contentDescription="@string/cd_github_icon"
+                />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/sign_in_via_github"
+                android:textColor="@color/black"
+                android:layout_marginStart="@dimen/margin_small"
+                />
+        </LinearLayout>
+    </androidx.cardview.widget.CardView>
+
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/MyIdeasFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.ui.fragments\n\nimport android.os.Bundle\nimport androidx.fragment.app.Fragment\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport com.github.bgrebennikov.devbuff.R\nimport com.github.bgrebennikov.devbuff.databinding.FragmentMyIdeasBinding\nimport com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.BaseFragment\n\nclass MyIdeasFragment : BaseFragment<FragmentMyIdeasBinding>(FragmentMyIdeasBinding::inflate){\n\n    override fun onBind(binding: FragmentMyIdeasBinding) {\n        super.onBind(binding)\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/MyIdeasFragment.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/MyIdeasFragment.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/MyIdeasFragment.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/MyIdeasFragment.kt	(date 1647006182386)
@@ -11,8 +11,5 @@
 
 class MyIdeasFragment : BaseFragment<FragmentMyIdeasBinding>(FragmentMyIdeasBinding::inflate){
 
-    override fun onBind(binding: FragmentMyIdeasBinding) {
-        super.onBind(binding)
-    }
 
 }
\ No newline at end of file
Index: app/src/main/res/xml/fragment_settings_scene.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/fragment_settings_scene.xml b/app/src/main/res/xml/fragment_settings_scene.xml
new file mode 100644
--- /dev/null	(date 1646925066106)
+++ b/app/src/main/res/xml/fragment_settings_scene.xml	(date 1646925066106)
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="utf-8"?>
+<MotionScene 
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:motion="http://schemas.android.com/apk/res-auto">
+
+    <Transition
+        motion:constraintSetEnd="@+id/end"
+        motion:constraintSetStart="@id/start"
+        motion:duration="100">
+       <KeyFrameSet>
+       </KeyFrameSet>
+        <OnClick />
+        <OnSwipe
+            motion:maxAcceleration="0.98"
+            motion:touchAnchorId="@+id/scrollView"
+            motion:dragDirection="dragUp" />
+    </Transition>
+
+    <ConstraintSet android:id="@+id/start">
+    </ConstraintSet>
+
+    <ConstraintSet android:id="@+id/end">
+        <Constraint
+            android:layout_height="75dp"
+            android:layout_marginTop="@dimen/margin_default"
+            motion:layout_constraintTop_toTopOf="parent"
+            android:layout_width="75dp"
+            motion:layout_constraintStart_toStartOf="parent"
+            android:id="@+id/profile_user_avatar"
+            android:layout_marginStart="@dimen/margin_default" />
+        <Constraint
+            android:layout_height="wrap_content"
+            android:layout_width="wrap_content"
+            android:id="@+id/profile_username"
+            motion:layout_constraintTop_toTopOf="@+id/profile_user_avatar"
+            motion:layout_constraintStart_toEndOf="@+id/profile_user_avatar"
+            android:layout_marginStart="@dimen/margin_default" />
+        <Constraint
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_small"
+            android:layout_width="wrap_content"
+            motion:layout_constraintTop_toBottomOf="@+id/profile_username"
+            android:id="@+id/profile_full_name"
+            motion:layout_constraintStart_toEndOf="@+id/profile_user_avatar"
+            android:layout_marginStart="@dimen/margin_default" />
+        <Constraint
+            android:id="@+id/scrollView"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            motion:layout_constraintBottom_toBottomOf="parent"
+            motion:layout_constraintTop_toBottomOf="@+id/profile_full_name"
+            android:layout_marginTop="24dp"
+            android:layout_marginStart="@dimen/margin_default"
+            android:layout_marginEnd="@dimen/margin_default" />
+        <Constraint
+            android:id="@+id/profile_bg"
+            motion:layout_constraintEnd_toEndOf="parent"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            motion:layout_constraintTop_toTopOf="parent"
+            motion:layout_constraintStart_toStartOf="parent"
+            android:alpha="0" />
+    </ConstraintSet>
+</MotionScene>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/SettingsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.ui.fragments\n\nimport android.os.Bundle\nimport androidx.fragment.app.Fragment\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport com.github.bgrebennikov.devbuff.R\nimport com.github.bgrebennikov.devbuff.databinding.FragmentSettingsBinding\nimport com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.BaseFragment\n\nclass SettingsFragment : BaseFragment<FragmentSettingsBinding>(FragmentSettingsBinding::inflate) {\n\n    override fun onBind(binding: FragmentSettingsBinding) {\n        super.onBind(binding)\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/SettingsFragment.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/SettingsFragment.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/SettingsFragment.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/SettingsFragment.kt	(date 1647167625321)
@@ -1,18 +1,54 @@
 package com.github.bgrebennikov.devbuff.presentation.ui.fragments
 
+import android.content.Context
 import android.os.Bundle
+import android.util.Log
 import androidx.fragment.app.Fragment
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.Toast
 import com.github.bgrebennikov.devbuff.R
+import com.github.bgrebennikov.devbuff.common.STAGED_BASE_IMAGE_URL
+import com.github.bgrebennikov.devbuff.common.TAG
+import com.github.bgrebennikov.devbuff.data.local.Status
 import com.github.bgrebennikov.devbuff.databinding.FragmentSettingsBinding
 import com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.BaseFragment
+import com.github.bgrebennikov.devbuff.presentation.viewModels.UserViewModel
 
 class SettingsFragment : BaseFragment<FragmentSettingsBinding>(FragmentSettingsBinding::inflate) {
 
-    override fun onBind(binding: FragmentSettingsBinding) {
-        super.onBind(binding)
+    private val userViewModel by lazy {
+        viewModelFactory.create(UserViewModel::class.java)
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        userViewModel.userData.observe(viewLifecycleOwner){
+            it.let { apiResponse ->
+                when(apiResponse.status){
+
+                    Status.LOADING ->{
+
+                    }
+
+                    Status.SUCCESS -> apiResponse.data?.let { user ->
+                        binding.profileData = user
+                    }
+                    Status.ERROR -> {
+                        Toast.makeText(context, it.message, Toast.LENGTH_LONG).show()
+                    }
+                }
+            }
+        }
+
+    }
+
+    override fun onAttach(context: Context) {
+        component.inject(this)
+        super.onAttach(context)
+
     }
 
 }
\ No newline at end of file
Index: app/src/main/res/layout/fragment_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".presentation.ui.fragments.SettingsFragment\">\n\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:text=\"Settings\"\n        android:textSize=\"32sp\"\n        android:textColor=\"@color/black\"\n        android:gravity=\"center\"\n        />\n\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_settings.xml b/app/src/main/res/layout/fragment_settings.xml
--- a/app/src/main/res/layout/fragment_settings.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/layout/fragment_settings.xml	(date 1647004258740)
@@ -1,17 +1,122 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".presentation.ui.fragments.SettingsFragment">
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <data>
+
+        <variable
+            name="profileData"
+            type="com.github.bgrebennikov.devbuff.data.remote.models.user.UserProfileModel" />
+
+    </data>
+
+    <androidx.constraintlayout.motion.widget.MotionLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@color/white"
+        app:layoutDescription="@xml/fragment_settings_scene"
+        tools:context=".presentation.ui.fragments.SettingsFragment">
 
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="Settings"
-        android:textSize="32sp"
-        android:textColor="@color/black"
-        android:gravity="center"
-        />
+        <ImageView
+            android:id="@+id/profile_bg"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:adjustViewBounds="true"
+            android:alpha=".25"
+            android:contentDescription="@string/cd_profile_background"
+            android:scaleType="centerCrop"
+            android:src="@raw/profile_bg"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+        <ImageView
+            android:id="@+id/profile_user_avatar"
+            android:layout_width="130dp"
+            android:layout_height="130dp"
+            android:layout_marginTop="@dimen/margin_default"
+            android:adjustViewBounds="true"
+            android:background="@drawable/bg_profile_rounded"
+            android:contentDescription="@string/cd_user_profile_avatar"
+            android:scaleType="centerCrop"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:profileImageFromUserID="@{profileData.id}"
+            tools:src="@raw/sample_avatar" />
+
+        <TextView
+            android:id="@+id/profile_username"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_small"
+            app:layout_constraintEnd_toEndOf="@+id/profile_user_avatar"
+            app:layout_constraintStart_toStartOf="@+id/profile_user_avatar"
+            app:layout_constraintTop_toBottomOf="@+id/profile_user_avatar"
+            app:username="@{profileData.username}"
+            tools:text="\@Username" />
+
+        <TextView
+            android:id="@+id/profile_full_name"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_small"
+            android:textColor="@color/black"
+            android:textSize="24sp"
+            android:textStyle="bold"
+            app:layout_constraintEnd_toEndOf="@+id/profile_user_avatar"
+            app:layout_constraintStart_toStartOf="@+id/profile_user_avatar"
+            app:layout_constraintTop_toBottomOf="@+id/profile_username"
+            tools:text="Boris Grebennikov"
+            app:firstName="@{profileData.firstName}"
+            app:lastName="@{profileData.lastName}"
+            />
+
+        <androidx.core.widget.NestedScrollView
+            android:id="@+id/scrollView"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_marginStart="@dimen/margin_default"
+            android:layout_marginTop="@dimen/margin_default"
+            android:layout_marginEnd="@dimen/margin_default"
+            android:background="@drawable/bg_rect_rounded_white"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/profile_full_name"
+            tools:layout_editor_absoluteX="12dp"
+            android:orientation="vertical"
+            >
+
+            <androidx.constraintlayout.widget.ConstraintLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:paddingTop="@dimen/padding_default"
+                android:paddingStart="@dimen/padding_default"
+                android:paddingEnd="@dimen/padding_default"
+                >
+
+                <TextView
+                    android:id="@+id/profile_about_title"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="@string/profile_about"
+                    android:textSize="18sp"
+                    android:textStyle="bold"
+                    android:textColor="@color/black"
+                    app:layout_constraintTop_toTopOf="parent"
+                    app:layout_constraintStart_toStartOf="parent"
+                    />
 
-</FrameLayout>
\ No newline at end of file
+                <TextView
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    tools:text="@string/lorem_small"
+                    android:text="@{profileData.bio}"
+                    app:layout_constraintTop_toBottomOf="@+id/profile_about_title"
+                    tools:layout_editor_absoluteX="12dp" />
+            </androidx.constraintlayout.widget.ConstraintLayout>
+
+        </androidx.core.widget.NestedScrollView>
+
+    </androidx.constraintlayout.motion.widget.MotionLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_idea_details.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_idea_details.xml b/app/src/main/res/layout/fragment_idea_details.xml
new file mode 100644
--- /dev/null	(date 1648123526940)
+++ b/app/src/main/res/layout/fragment_idea_details.xml	(date 1648123526940)
@@ -0,0 +1,154 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <data>
+        <variable
+            name="alreadyLoadedInfo"
+            type="com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel" />
+
+        <variable
+            name="ideaInfo"
+            type="com.github.bgrebennikov.devbuff.data.remote.models.explore.IdeaDetailsModel" />
+
+        <variable
+            name="isLoading"
+            type="Boolean" />
+
+    </data>
+
+    <androidx.core.widget.NestedScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        tools:context=".presentation.ui.fragments.IdeaDetailsFragment"
+        android:background="@color/white"
+        >
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            >
+
+            <TextView
+                android:id="@+id/title"
+                style="@style/TitleDefault"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="parent"
+                tools:text="Reaction Alpha"
+                android:text="@{alreadyLoadedInfo.name}" />
+
+            <ImageView
+                android:id="@+id/author_image"
+                android:layout_width="@dimen/idea_profile_image_large"
+                android:layout_height="@dimen/idea_profile_image_large"
+                android:layout_marginStart="@dimen/margin_default"
+                android:layout_marginTop="@dimen/margin_small"
+                android:contentDescription="@string/cd_author_avatar_default"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/title"
+                app:profileImageFromUserID="@{alreadyLoadedInfo.ownerIdea.id}"
+                tools:src="@raw/sample_image" />
+
+            <TextView
+                android:id="@+id/author_name"
+                style="@style/authorName"
+                android:layout_marginStart="@dimen/margin_small"
+                app:layout_constraintStart_toEndOf="@+id/author_image"
+                app:layout_constraintTop_toTopOf="@+id/author_image"
+                tools:text="Alexander Macintosh"
+                app:firstName="@{alreadyLoadedInfo.ownerIdea.firstName.toString()}"
+                app:lastName="@{alreadyLoadedInfo.ownerIdea.lastName.toString()}"
+                />
+
+            <TextView
+                android:id="@+id/textView3"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="@dimen/margin_small"
+                app:layout_constraintStart_toEndOf="@+id/author_image"
+                app:layout_constraintTop_toBottomOf="@+id/author_name"
+                tools:text="\@username"
+                android:text="@{alreadyLoadedInfo.ownerIdea.username}"
+                />
+
+            <TextView
+                android:id="@+id/last_update_title"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/margin_small"
+                android:text="@string/last_update"
+                app:layout_constraintStart_toStartOf="@+id/author_image"
+                app:layout_constraintTop_toBottomOf="@+id/author_image" />
+
+            <TextView
+                android:id="@+id/last_update"
+                style="@style/HeaderSmall"
+                app:layout_constraintStart_toStartOf="@+id/last_update_title"
+                app:layout_constraintTop_toBottomOf="@+id/last_update_title"
+                tools:text="Месяц назад"
+                app:ideaLastUpdateTimeString="@{alreadyLoadedInfo.updateDate}"
+                />
+
+            <TextView
+                android:id="@+id/status_title"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/margin_small"
+                android:text="@string/status"
+                app:layout_constraintStart_toStartOf="@+id/last_update"
+                app:layout_constraintTop_toBottomOf="@+id/last_update" />
+
+            <TextView
+                android:id="@+id/status"
+                style="@style/HeaderSmall"
+                android:layout_marginTop="@dimen/margin_low"
+                app:layout_constraintStart_toStartOf="@+id/status_title"
+                app:layout_constraintTop_toBottomOf="@+id/status_title"
+                tools:text="Идет набор в команду"
+                app:ideaStatus="@{ideaInfo.status}"
+                />
+
+            <View
+                android:id="@+id/header_divider"
+                android:layout_width="match_parent"
+                android:layout_height="1dp"
+                app:layout_constraintTop_toBottomOf="@+id/status"
+                android:layout_marginTop="@dimen/margin_default"
+                android:layout_marginBottom="@dimen/margin_small"
+                android:background="@color/gray_medium"
+                android:layout_marginStart="@dimen/margin_default"
+                android:layout_marginEnd="@dimen/margin_default" />
+
+
+            <ProgressBar
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                app:layout_constraintTop_toBottomOf="@+id/header_divider"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintEnd_toEndOf="parent"
+                android:layout_marginTop="@dimen/margin_default"
+                android:indeterminate="true"
+                android:indeterminateTint="@color/blue"
+                app:ideaDetailsLoading="@{isLoading}"
+                tools:visibility="visible"
+                />
+
+            <TextView
+                tools:visibility="gone"
+                android:id="@+id/idea_body"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                app:layout_constraintTop_toBottomOf="@+id/header_divider"
+                tools:text="@string/lorem_ipsum"
+                android:layout_marginTop="@dimen/margin_default"
+                android:layout_marginStart="@dimen/margin_default"
+                android:layout_marginEnd="@dimen/margin_default"
+                android:textColor="@color/black" />
+
+        </androidx.constraintlayout.widget.ConstraintLayout>
+
+
+    </androidx.core.widget.NestedScrollView>
+</layout>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/binding/IdeaDetailsBindingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/binding/IdeaDetailsBindingAdapter.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/binding/IdeaDetailsBindingAdapter.kt
new file mode 100644
--- /dev/null	(date 1648124149463)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/binding/IdeaDetailsBindingAdapter.kt	(date 1648124149463)
@@ -0,0 +1,50 @@
+package com.github.bgrebennikov.devbuff.presentation.ui.adapters.binding
+
+import android.annotation.SuppressLint
+import android.graphics.Color
+import android.text.format.DateUtils
+import android.widget.TextView
+import androidx.databinding.BindingAdapter
+import com.github.bgrebennikov.devbuff.R
+import com.github.bgrebennikov.devbuff.data.remote.models.explore.IdeaStatus
+import java.text.SimpleDateFormat
+
+@SuppressLint("SimpleDateFormat")
+@BindingAdapter("ideaLastUpdateTimeString")
+fun setIdeaLastUpdateTimeString(textView: TextView, dateTime: String) {
+
+    val datePattern = SimpleDateFormat("yyyy-MM-dd")
+    val parsedDate = datePattern.parse(dateTime)?.time
+
+    with(textView){
+        text = if(parsedDate != null){
+            DateUtils.formatDateTime(
+                context,
+                parsedDate,
+                DateUtils.FORMAT_SHOW_DATE
+            )
+        } else { dateTime }
+    }
+
+}
+
+@BindingAdapter("ideaStatus")
+fun setIdeaStatus(textView: TextView, status: IdeaStatus?){
+
+    with(textView){
+        when(status){
+            IdeaStatus.WAITING_FULL_TEAM -> {
+                text = context.getString(R.string.waiting_full_team)
+                setTextColor(context.getColor(R.color.green))
+            }
+            IdeaStatus.PUBLISH -> {
+                text = context.getString(R.string.published)
+                setTextColor(context.getColor(R.color.blue))
+            }
+            else -> {
+                text = context.getString(R.string.ellipsize)
+            }
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/IdeaDetailsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/IdeaDetailsFragment.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/IdeaDetailsFragment.kt
new file mode 100644
--- /dev/null	(date 1648123675577)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/IdeaDetailsFragment.kt	(date 1648123675577)
@@ -0,0 +1,67 @@
+package com.github.bgrebennikov.devbuff.presentation.ui.fragments
+
+import android.content.Context
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import androidx.navigation.fragment.navArgs
+import com.github.bgrebennikov.devbuff.common.TAG
+import com.github.bgrebennikov.devbuff.data.local.Status
+import com.github.bgrebennikov.devbuff.databinding.FragmentIdeaDetailsBinding
+import com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.BaseFragment
+import com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.utils.setTextFromHtml
+import com.github.bgrebennikov.devbuff.presentation.viewModels.ExploreViewModel
+
+class IdeaDetailsFragment : BaseFragment<FragmentIdeaDetailsBinding>(
+    FragmentIdeaDetailsBinding::inflate
+) {
+
+    private val args : IdeaDetailsFragmentArgs by navArgs()
+
+    private val ideaInfo by lazy{
+        args.ideaInfo
+    }
+
+    private val viewModel by lazy {
+        viewModelFactory.create(ExploreViewModel::class.java)
+    }
+
+    override fun onAttach(context: Context) {
+        super.onAttach(context)
+        component.inject(this)
+    }
+
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        binding.alreadyLoadedInfo = ideaInfo
+        Log.i(TAG, "onViewCreated: $ideaInfo")
+
+        viewModel.loadSingleIdea(ideaInfo.id).observe(viewLifecycleOwner){
+            it.let { apiResponse ->
+                when(apiResponse.status){
+
+                    Status.LOADING -> {
+                        binding.isLoading = true
+                    }
+
+                    Status.SUCCESS -> apiResponse.data?.let { idea ->
+                        binding.ideaBody.setTextFromHtml(idea.body)
+                        binding.isLoading = false
+                        binding.ideaInfo = idea
+                    }
+
+                    Status.ERROR -> apiResponse.message?.let { error ->
+                        Log.i(TAG, "onViewCreated: $error")
+                        binding.isLoading = false
+                    }
+
+                }
+            }
+        }
+
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/NewIdeaFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.ui.fragments\n\nimport android.os.Bundle\nimport androidx.fragment.app.Fragment\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport com.github.bgrebennikov.devbuff.R\nimport com.github.bgrebennikov.devbuff.databinding.FragmentNewIdeaBinding\nimport com.github.bgrebennikov.devbuff.presentation.ui.fragments.base.BaseFragment\n\nclass NewIdeaFragment : BaseFragment<FragmentNewIdeaBinding>(FragmentNewIdeaBinding::inflate) {\n\n    override fun onBind(binding: FragmentNewIdeaBinding) {\n        super.onBind(binding)\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/NewIdeaFragment.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/NewIdeaFragment.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/NewIdeaFragment.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/fragments/NewIdeaFragment.kt	(date 1647006238563)
@@ -11,8 +11,6 @@
 
 class NewIdeaFragment : BaseFragment<FragmentNewIdeaBinding>(FragmentNewIdeaBinding::inflate) {
 
-    override fun onBind(binding: FragmentNewIdeaBinding) {
-        super.onBind(binding)
-    }
+
 
 }
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/SplashScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/SplashScreen.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/SplashScreen.kt
new file mode 100644
--- /dev/null	(date 1646903934890)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/SplashScreen.kt	(date 1646903934890)
@@ -0,0 +1,31 @@
+package com.github.bgrebennikov.devbuff.presentation.ui
+
+import android.annotation.SuppressLint
+import android.content.Intent
+import android.os.Bundle
+import com.github.bgrebennikov.devbuff.presentation.viewModels.AuthViewModel
+
+@SuppressLint("CustomSplashScreen")
+class SplashScreen : BaseActivity() {
+
+    private val authViewModel by lazy {
+        viewModelFactory.create(AuthViewModel::class.java)
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        component.inject(this)
+        super.onCreate(savedInstanceState)
+
+        authViewModel.isAuthenticated.observe(this){ isAuthenticated ->
+            val intent = if(isAuthenticated) Intent(this, MainActivity::class.java)
+            else Intent(this, GuestActivity::class.java)
+
+            startActivity(intent)
+            finish()
+            return@observe
+        }
+
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/ApiService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/ApiService.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/ApiService.kt
new file mode 100644
--- /dev/null	(date 1648042817976)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/ApiService.kt	(date 1648042817976)
@@ -0,0 +1,30 @@
+package com.github.bgrebennikov.devbuff.data.remote
+
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+import com.github.bgrebennikov.devbuff.data.remote.models.explore.IdeaDetailsModel
+import com.github.bgrebennikov.devbuff.data.remote.models.explore.IdeasResponse
+import retrofit2.http.GET
+import retrofit2.http.POST
+import retrofit2.http.Path
+import retrofit2.http.Query
+
+interface ApiService {
+
+    @GET("idea/?sortBy=lastUpdate")
+    suspend fun getIdeas(
+        @Query("page") page: Int
+    ): IdeasResponse
+
+    @POST("/oAuth")
+    suspend fun githubOauth(
+        @Query("code") code: String,
+        @Query("grant_type") grant_type: String,
+        @Query("client_type") clientType: String = "app"
+    ): AuthConfig
+
+    @GET("/idea/{id}")
+    suspend fun getIdeaById(
+        @Path("id") _id : String
+    ) : IdeaDetailsModel
+
+}
\ No newline at end of file
Index: app/src/main/res/drawable/splash_screen.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/splash_screen.xml b/app/src/main/res/drawable/splash_screen.xml
new file mode 100644
--- /dev/null	(date 1646833492039)
+++ b/app/src/main/res/drawable/splash_screen.xml	(date 1646833492039)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item
+        android:drawable="@color/white"
+        />
+
+    <item
+        android:drawable="@drawable/ic_devbuff_logo"
+        android:gravity="center"
+        />
+
+</layer-list>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/LanguagesModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/LanguagesModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/LanguagesModel.kt
new file mode 100644
--- /dev/null	(date 1646820098640)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/LanguagesModel.kt	(date 1646820098640)
@@ -0,0 +1,16 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.explore
+
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
+import com.google.gson.annotations.SerializedName
+
+data class LanguagesModel(
+
+    @SerializedName("name")
+    val name: String,
+
+    @SerializedName("technologies")
+    val technologies: List<TechnologiesModel>,
+) : ListItem{
+    override val itemId: Int
+        get() = this.name.hashCode()
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/models/OwnerIdea.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/OwnerIdea.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/OwnerIdea.kt
rename from app/src/main/java/com/github/bgrebennikov/devbuff/data/models/OwnerIdea.kt
rename to app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/OwnerIdea.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/OwnerIdea.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/OwnerIdea.kt	(date 1647272197311)
@@ -1,7 +1,10 @@
-package com.github.bgrebennikov.devbuff.data.models
+package com.github.bgrebennikov.devbuff.data.remote.models.explore
 
+import android.os.Parcelable
 import com.google.gson.annotations.SerializedName
+import kotlinx.parcelize.Parcelize
 
+@Parcelize
 data class OwnerIdea(
 
     @SerializedName("id")
@@ -11,9 +14,9 @@
     val username: String,
 
     @SerializedName("firstName")
-    val firstName: String,
+    val firstName: String?,
 
     @SerializedName("lastName")
-    val lastName: String
+    val lastName: String?
 
-)
+) : Parcelable
Index: app/src/main/java/com/github/bgrebennikov/devbuff/common/Constants.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.common\n\nconst val TAG = \"MESSAGE\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/common/Constants.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/common/Constants.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/common/Constants.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/common/Constants.kt	(date 1647770756180)
@@ -1,3 +1,20 @@
 package com.github.bgrebennikov.devbuff.common
 
-const val TAG = "MESSAGE"
\ No newline at end of file
+const val TAG = "MESSAGE"
+
+const val USER_ACCESS_TOKEN = "user_access_token"
+const val USER_REFRESH_TOKEN = "user_refresh_token"
+const val USER_TOKEN_EXPIRES_IN = "user_token_expires_in"
+
+const val BASE_URL = "https://api.devbuff.com/"
+const val STAGING_URL = "https://api-staging.devbuff.com/"
+
+// for execute user profile image, put UserID to end of this string
+const val BASE_IMAGE_URL = "https://api.devbuff.com/photo/profile"
+const val STAGED_BASE_IMAGE_URL = "https://api-staging.devbuff.com/photo/profile"
+
+const val AUTHORIZATION_HEADER = "Authorization"
+
+object ServerErrorCodes{
+    const val UNAUTHORIZED = 401
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.ui\n\nimport android.content.Intent\nimport android.net.Uri\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.util.Log\nimport android.widget.Toast\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.navigation.fragment.NavHostFragment\nimport androidx.navigation.ui.NavigationUI\nimport androidx.navigation.ui.setupActionBarWithNavController\nimport com.github.bgrebennikov.devbuff.BaseApplication\nimport com.github.bgrebennikov.devbuff.R\nimport com.github.bgrebennikov.devbuff.common.TAG\nimport com.github.bgrebennikov.devbuff.databinding.ActivityMainBinding\nimport javax.inject.Inject\n\nclass MainActivity : AppCompatActivity() {\n\n    private val binding by lazy {\n        ActivityMainBinding.inflate(layoutInflater)\n    }\n\n    @Inject\n    lateinit var viewModelFactory : ViewModelProvider.Factory\n\n    private val component by lazy {\n        (application as BaseApplication).component\n    }\n\n\n    private val navHostFragment by lazy {\n        supportFragmentManager.findFragmentById(R.id.nav_container)\n                as NavHostFragment\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        component.inject(this)\n        super.onCreate(savedInstanceState)\n        setContentView(binding.root)\n\n        val navController = navHostFragment.navController\n        NavigationUI.setupWithNavController(binding.bottomNavigationView, navController)\n        setSupportActionBar(binding.mainToolbar)\n        setupActionBarWithNavController(navController)\n\n        binding.gitLogin.setOnClickListener{\n            githubAuth()\n        }\n\n    }\n\n    override fun onResume() {\n        super.onResume()\n\n        val authData = intent.data\n\n        if (authData != null && authData.toString().startsWith(redirectUri)){\n            Log.i(TAG, \"onResume: ${authData.getQueryParameter(\"code\")}\")\n            Toast.makeText(this, \"Auth code: ${authData.getQueryParameter(\"code\")}\", Toast.LENGTH_LONG).show()\n        }\n\n    }\n\n    // https://github.com/login/oauth/authorize?client_id=bd92fac8016598fb2803\n    val clientID = \"Iv1.f562fe56b0ad844e\"\n    val redirectUri = \"devbuff://callback\"\n\n    private fun githubAuth(){\n        startActivity(\n            Intent(\n                Intent.ACTION_VIEW,\n                Uri.parse(\"https://github.com/login/oauth/authorize?client_id=$clientID&redirect_uri=$redirectUri\")\n            )\n        )\n    }\n\n\n    override fun onSupportNavigateUp(): Boolean {\n        return navHostFragment.navController.navigateUp() || super.onSupportNavigateUp()\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/MainActivity.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/MainActivity.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/MainActivity.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/MainActivity.kt	(date 1647771897880)
@@ -1,32 +1,23 @@
 package com.github.bgrebennikov.devbuff.presentation.ui
 
-import android.content.Intent
-import android.net.Uri
-import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
-import android.util.Log
-import android.widget.Toast
-import androidx.lifecycle.ViewModelProvider
 import androidx.navigation.fragment.NavHostFragment
+import androidx.navigation.ui.AppBarConfiguration
 import androidx.navigation.ui.NavigationUI
 import androidx.navigation.ui.setupActionBarWithNavController
-import com.github.bgrebennikov.devbuff.BaseApplication
 import com.github.bgrebennikov.devbuff.R
-import com.github.bgrebennikov.devbuff.common.TAG
 import com.github.bgrebennikov.devbuff.databinding.ActivityMainBinding
-import javax.inject.Inject
+import com.github.bgrebennikov.devbuff.presentation.viewModels.AuthViewModel
+import com.github.bgrebennikov.devbuff.presentation.viewModels.UserViewModel
 
-class MainActivity : AppCompatActivity() {
+class MainActivity : BaseActivity(){
 
     private val binding by lazy {
         ActivityMainBinding.inflate(layoutInflater)
     }
 
-    @Inject
-    lateinit var viewModelFactory : ViewModelProvider.Factory
-
-    private val component by lazy {
-        (application as BaseApplication).component
+    private val userViewModel by lazy {
+        viewModelFactory.create(UserViewModel::class.java)
     }
 
 
@@ -40,40 +31,26 @@
         super.onCreate(savedInstanceState)
         setContentView(binding.root)
 
+        val appBarConfig = AppBarConfiguration(
+            setOf(
+                R.id.exploreFragment,
+                R.id.myIdeasFragment,
+                R.id.newIdeaFragment,
+                R.id.settingsFragment
+                )
+        )
+
         val navController = navHostFragment.navController
         NavigationUI.setupWithNavController(binding.bottomNavigationView, navController)
+
+
         setSupportActionBar(binding.mainToolbar)
-        setupActionBarWithNavController(navController)
-
-        binding.gitLogin.setOnClickListener{
-            githubAuth()
-        }
-
-    }
-
-    override fun onResume() {
-        super.onResume()
+        setupActionBarWithNavController(navController, appBarConfig)
 
-        val authData = intent.data
+        userViewModel.loadUser()
 
-        if (authData != null && authData.toString().startsWith(redirectUri)){
-            Log.i(TAG, "onResume: ${authData.getQueryParameter("code")}")
-            Toast.makeText(this, "Auth code: ${authData.getQueryParameter("code")}", Toast.LENGTH_LONG).show()
-        }
 
-    }
 
-    // https://github.com/login/oauth/authorize?client_id=bd92fac8016598fb2803
-    val clientID = "Iv1.f562fe56b0ad844e"
-    val redirectUri = "devbuff://callback"
-
-    private fun githubAuth(){
-        startActivity(
-            Intent(
-                Intent.ACTION_VIEW,
-                Uri.parse("https://github.com/login/oauth/authorize?client_id=$clientID&redirect_uri=$redirectUri")
-            )
-        )
     }
 
 
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/RequirementsModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/RequirementsModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/RequirementsModel.kt
new file mode 100644
--- /dev/null	(date 1646820098713)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/RequirementsModel.kt	(date 1646820098713)
@@ -0,0 +1,17 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.explore
+
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
+import com.google.gson.annotations.SerializedName
+
+data class RequirementsModel(
+
+    @SerializedName("name")
+    val name: String,
+
+    @SerializedName("languages")
+    val languages : List<LanguagesModel>
+
+) : ListItem{
+    override val itemId: Int
+        get() = this.name.hashCode()
+}
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/TechnologiesModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/TechnologiesModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/TechnologiesModel.kt
new file mode 100644
--- /dev/null	(date 1646820098760)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/TechnologiesModel.kt	(date 1646820098760)
@@ -0,0 +1,12 @@
+package com.github.bgrebennikov.devbuff.data.remote.models.explore
+
+import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
+import com.google.gson.annotations.SerializedName
+
+data class TechnologiesModel(
+    @SerializedName("name")
+    val name: String,
+) : ListItem{
+    override val itemId: Int
+        get() = this.name.hashCode()
+}
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/models/IdeasResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/IdeasResponse.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeasResponse.kt
rename from app/src/main/java/com/github/bgrebennikov/devbuff/data/models/IdeasResponse.kt
rename to app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeasResponse.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/IdeasResponse.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeasResponse.kt	(date 1646820098726)
@@ -1,6 +1,5 @@
-package com.github.bgrebennikov.devbuff.data.models
+package com.github.bgrebennikov.devbuff.data.remote.models.explore
 
-import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
 import com.google.gson.annotations.SerializedName
 
 data class IdeasResponse(
Index: app/src/main/java/com/github/bgrebennikov/devbuff/data/models/IdeaModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/IdeaModel.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaModel.kt
rename from app/src/main/java/com/github/bgrebennikov/devbuff/data/models/IdeaModel.kt
rename to app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaModel.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/data/models/IdeaModel.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/data/remote/models/explore/IdeaModel.kt	(date 1648120356367)
@@ -1,7 +1,8 @@
-package com.github.bgrebennikov.devbuff.data.models
+package com.github.bgrebennikov.devbuff.data.remote.models.explore
 
 import com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem
 import com.google.gson.annotations.SerializedName
+import java.util.*
 
 data class IdeaModel(
     @SerializedName("id")
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <color name=\"purple_200\">#FFBB86FC</color>\n    <color name=\"purple_500\">#FF6200EE</color>\n    <color name=\"purple_700\">#FF3700B3</color>\n    <color name=\"teal_200\">#FF03DAC5</color>\n    <color name=\"teal_700\">#FF018786</color>\n    <color name=\"black\">#FF000000</color>\n    <color name=\"white\">#FFFFFFFF</color>\n\n    <color name=\"blue\">#2196F3</color>\n    <color name=\"gray_light\">#f2f2f2</color>\n    <color name=\"gray_medium\">#CACACA</color>\n\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/values/colors.xml	(date 1648124094140)
@@ -12,5 +12,7 @@
     <color name="gray_light">#f2f2f2</color>
     <color name="gray_medium">#CACACA</color>
 
+    <color name="green">#1D7420</color>
+
 
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/NetworkModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.di.modules\n\nimport com.github.bgrebennikov.devbuff.data.ApiService\nimport dagger.Module\nimport dagger.Provides\nimport okhttp3.OkHttpClient\nimport okhttp3.logging.HttpLoggingInterceptor\nimport retrofit2.Retrofit\nimport retrofit2.converter.gson.GsonConverterFactory\nimport javax.inject.Singleton\n\n\n@Module\nclass NetworkModule {\n\n    @Singleton\n    @Provides\n    fun provideApiService() : ApiService{\n\n        val logger = HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY)\n        val client = OkHttpClient.Builder().addInterceptor(logger).build()\n\n        val retrofit = Retrofit.Builder()\n            .baseUrl(STAGING_URL)\n            .client(client)\n            .addConverterFactory(GsonConverterFactory.create())\n            .build()\n\n        return retrofit.create(ApiService::class.java)\n    }\n\n    companion object{\n        private const val BASE_URL = \"https://api.devbuff.com/\"\n        private const val STAGING_URL = \"https://api-staging.devbuff.com/\"\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/NetworkModule.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/NetworkModule.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/NetworkModule.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/NetworkModule.kt	(date 1648119814490)
@@ -1,8 +1,18 @@
 package com.github.bgrebennikov.devbuff.di.modules
 
-import com.github.bgrebennikov.devbuff.data.ApiService
+import android.app.Application
+import com.github.bgrebennikov.devbuff.common.STAGING_URL
+import com.github.bgrebennikov.devbuff.common.ServerErrorCodes
+import com.github.bgrebennikov.devbuff.data.dataStore.DataStoreHelper
+import com.github.bgrebennikov.devbuff.data.remote.ApiService
+import com.github.bgrebennikov.devbuff.data.remote.TokenService
+import com.github.bgrebennikov.devbuff.data.remote.UserApiService
+import com.github.bgrebennikov.devbuff.network.UserServiceInterceptor
+import com.google.gson.GsonBuilder
 import dagger.Module
 import dagger.Provides
+import kotlinx.coroutines.runBlocking
+import okhttp3.Cache
 import okhttp3.OkHttpClient
 import okhttp3.logging.HttpLoggingInterceptor
 import retrofit2.Retrofit
@@ -13,9 +23,32 @@
 @Module
 class NetworkModule {
 
+    @Singleton
+    @Provides
+    fun provideOkHttpCache(application: Application) : Cache{
+        val size = 10 * 1024 * 1024
+        return Cache(
+            application.cacheDir, size.toLong()
+        )
+    }
+
+
+
+    @Singleton
+    @Provides
+    fun provideUserClient(interceptor: UserServiceInterceptor) : OkHttpClient{
+
+        val logger = HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY)
+
+        return OkHttpClient.Builder()
+            .addInterceptor(interceptor)
+            .addInterceptor(logger)
+            .build()
+    }
+
     @Singleton
     @Provides
-    fun provideApiService() : ApiService{
+    fun provideApiService() : ApiService {
 
         val logger = HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY)
         val client = OkHttpClient.Builder().addInterceptor(logger).build()
@@ -23,15 +56,41 @@
         val retrofit = Retrofit.Builder()
             .baseUrl(STAGING_URL)
             .client(client)
+            .addConverterFactory(GsonConverterFactory.create(
+                GsonBuilder()
+                    .setDateFormat("yyyy-MM-dd")
+                    .create()
+            ))
+            .build()
+
+        return retrofit.create(ApiService::class.java)
+    }
+
+
+    @Singleton
+    @Provides
+    fun provideUserApiService(userClient: OkHttpClient): UserApiService{
+
+        val retrofit = Retrofit.Builder()
+            .baseUrl(STAGING_URL)
+            .client(userClient)
             .addConverterFactory(GsonConverterFactory.create())
             .build()
 
-        return retrofit.create(ApiService::class.java)
+        return retrofit.create(UserApiService::class.java)
+
     }
 
-    companion object{
-        private const val BASE_URL = "https://api.devbuff.com/"
-        private const val STAGING_URL = "https://api-staging.devbuff.com/"
+    @Singleton
+    @Provides
+    fun provideTokenService() : TokenService{
+        val retrofit = Retrofit.Builder()
+            .baseUrl(STAGING_URL)
+            .addConverterFactory(GsonConverterFactory.create())
+            .build()
+
+        return retrofit.create(TokenService::class.java)
     }
 
+
 }
\ No newline at end of file
Index: app/src/main/res/drawable/bg_idea_more_btn.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/bg_idea_more_btn.xml b/app/src/main/res/drawable/bg_idea_more_btn.xml
new file mode 100644
--- /dev/null	(date 1647006479833)
+++ b/app/src/main/res/drawable/bg_idea_more_btn.xml	(date 1647006479833)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle"
+    >
+
+    <solid android:color="@color/white"/>
+    <corners android:radius="@dimen/corners_radius_default"/>
+    <stroke android:color="@color/blue" android:width="2dp"/>
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/ViewModelsModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.di.modules\n\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.ViewModelProvider\nimport com.github.bgrebennikov.devbuff.di.keys.ViewModelKey\nimport com.github.bgrebennikov.devbuff.presentation.viewModels.ExploreViewModel\nimport com.github.bgrebennikov.devbuff.presentation.viewModels.MainViewModelFactory\nimport dagger.Binds\nimport dagger.Module\nimport dagger.multibindings.IntoMap\n\n@Module\ninterface ViewModelsModule {\n\n\n    @Binds\n    fun bindViewModelFactory(impl: MainViewModelFactory) : ViewModelProvider.Factory\n\n    @IntoMap\n    @ViewModelKey(ExploreViewModel::class)\n    @Binds\n    fun bindSharedViewModel(viewModel: ExploreViewModel) : ViewModel\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/ViewModelsModule.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/ViewModelsModule.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/ViewModelsModule.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/ViewModelsModule.kt	(date 1646920019406)
@@ -3,8 +3,10 @@
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.ViewModelProvider
 import com.github.bgrebennikov.devbuff.di.keys.ViewModelKey
+import com.github.bgrebennikov.devbuff.presentation.viewModels.AuthViewModel
 import com.github.bgrebennikov.devbuff.presentation.viewModels.ExploreViewModel
 import com.github.bgrebennikov.devbuff.presentation.viewModels.MainViewModelFactory
+import com.github.bgrebennikov.devbuff.presentation.viewModels.UserViewModel
 import dagger.Binds
 import dagger.Module
 import dagger.multibindings.IntoMap
@@ -21,4 +23,14 @@
     @Binds
     fun bindSharedViewModel(viewModel: ExploreViewModel) : ViewModel
 
+    @IntoMap
+    @ViewModelKey(AuthViewModel::class)
+    @Binds
+    fun bindAuthViewModel(viewModel: AuthViewModel): ViewModel
+
+    @IntoMap
+    @ViewModelKey(UserViewModel::class)
+    @Binds
+    fun bindUserViewModel(viewModel: UserViewModel): ViewModel
+
 }
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\n    <!-- Base application theme. -->\n    <style name=\"Theme.DevBuff\" parent=\"Theme.MaterialComponents.DayNight.NoActionBar\">\n        <!-- Primary brand color. -->\n        <item name=\"colorPrimary\">@color/purple_500</item>\n        <item name=\"colorPrimaryVariant\">@color/purple_700</item>\n        <item name=\"colorOnPrimary\">@color/white</item>\n        <!-- Secondary brand color. -->\n        <item name=\"colorSecondary\">@color/teal_200</item>\n        <item name=\"colorSecondaryVariant\">@color/teal_700</item>\n        <item name=\"colorOnSecondary\">@color/black</item>\n        <!-- Status bar color. -->\n        <item name=\"android:statusBarColor\" tools:targetApi=\"l\">@color/white</item>\n        <item name=\"android:windowLightStatusBar\">true</item>\n        <!-- Customize your theme here. -->\n    </style>\n\n    <style name=\"BottomNavStyle\">\n        <item name=\"android:background\">@drawable/bg_rect_rounded_white</item>\n<!--        <item name=\"android:layout_margin\">12dp</item>-->\n        <item name=\"elevation\">0dp</item>\n        <item name=\"itemIconTint\">@color/bottom_items_color</item>\n        <item name=\"itemTextColor\">@color/bottom_items_color</item>\n    </style>\n\n    <style name=\"ToolbarMainStyle\">\n        <item name=\"android:background\">@color/white</item>\n    </style>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
--- a/app/src/main/res/values/themes.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/values/themes.xml	(date 1648042431803)
@@ -13,6 +13,20 @@
         <item name="android:statusBarColor" tools:targetApi="l">@color/white</item>
         <item name="android:windowLightStatusBar">true</item>
         <!-- Customize your theme here. -->
+
+
+    </style>
+
+    <style name="SplashTheme" parent="Theme.MaterialComponents.DayNight.NoActionBar">
+        <item name="android:background">@drawable/splash_screen</item>
+        <item name="android:windowLightStatusBar" tools:targetApi="m">true</item>
+        <item name="android:statusBarColor" tools:targetApi="l">@color/white</item>
+        <item name="android:navigationBarColor">@color/white</item>
+        <item name="android:windowLightNavigationBar" tools:targetApi="o_mr1">false</item>
+        <item name="android:navigationBarDividerColor" tools:targetApi="o_mr1">@color/white</item>
+
+        <item name="android:windowTranslucentStatus">true</item>
+        <item name="android:windowTranslucentNavigation">true</item>
     </style>
 
     <style name="BottomNavStyle">
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/RepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.domain\n\nimport com.github.bgrebennikov.devbuff.data.ApiService\nimport com.github.bgrebennikov.devbuff.data.models.IdeaModel\nimport com.github.bgrebennikov.devbuff.data.models.IdeasResponse\nimport javax.inject.Inject\n\nclass RepositoryImpl @Inject constructor(\n    private val apiService: ApiService\n) : Repository {\n\n\n    override suspend fun getIdeas(page: Int): List<IdeaModel> {\n        return apiService.getIdeas(page).ideas\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/RepositoryImpl.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/RepositoryImpl.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/RepositoryImpl.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/RepositoryImpl.kt	(date 1648118374170)
@@ -1,17 +1,28 @@
 package com.github.bgrebennikov.devbuff.domain
 
-import com.github.bgrebennikov.devbuff.data.ApiService
-import com.github.bgrebennikov.devbuff.data.models.IdeaModel
-import com.github.bgrebennikov.devbuff.data.models.IdeasResponse
+import com.github.bgrebennikov.devbuff.data.remote.ApiService
+import com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel
+import com.github.bgrebennikov.devbuff.data.mappers.MapperIdeas
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+import com.github.bgrebennikov.devbuff.data.remote.models.explore.IdeaDetailsModel
 import javax.inject.Inject
 
 class RepositoryImpl @Inject constructor(
     private val apiService: ApiService
 ) : Repository {
 
+    private val mapperIdeas = MapperIdeas()
+
+    override suspend fun authGithubUser(code: String): AuthConfig {
+        return apiService.githubOauth(code, "github_oauth")
+    }
 
-    override suspend fun getIdeas(page: Int): List<IdeaModel> {
-        return apiService.getIdeas(page).ideas
+    override suspend fun getIdeas(page: Int): List<SimpleIdeaModel> {
+        return mapperIdeas.mapToSimpleIdeasList(apiService.getIdeas(page).ideas)
+    }
+
+    override suspend fun getIdeaById(_id: String): IdeaDetailsModel {
+        return apiService.getIdeaById(_id)
     }
 
 
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">DevBuff</string>\n\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\n    <string name=\"explore\">Explore</string>\n    <string name=\"my\">My</string>\n    <string name=\"create_new\">New</string>\n    <string name=\"settings\">Settings</string>\n    <string name=\"cd_idea_post_owner\">cd_idea_post_owner</string>\n    <string name=\"default_description_text\">DevBuff - это площадка где разработчики разных специальностей могут находить друг друга и создавать проекты совместно</string>\n    <string name=\"technologies\">Техногогии в проекте</string>\n    <string name=\"programming_languages\">Языки программирования</string>\n    <string name=\"default_name\">Alexander Chapchuk</string>\n    <string name=\"default_username\">\\@BigTows</string>\n    <string name=\"default_idea_title\">DevBuff</string>\n    <string name=\"specialists\">Специалисты</string>\n    <string name=\"cd_notification\">cd_notification</string>\n    <string name=\"cd_github_icon\">cd_github_icon</string>\n    <string name=\"sign_in_via_github\">Войти с GitHub</string>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/values/strings.xml	(date 1648123839213)
@@ -17,4 +17,31 @@
     <string name="cd_notification">cd_notification</string>
     <string name="cd_github_icon">cd_github_icon</string>
     <string name="sign_in_via_github">Войти с GitHub</string>
+    <string name="redirect_uri">devbuff://callback/GitHub</string>
+    <string name="api_endpoint_guthub_auth">https://api-staging.devbuff.com/oAuth/external/init/GITHUB/client/app</string>
+    <string name="github_loading_text">Авторизовываемся через Github…</string>
+    <string name="guest_login_subtitle">Войдите в аккаунт и получите возможность учавствовать в проектах, или создавать свои</string>
+    <string name="view_more">Подробнее</string>
+    <string name="cd_user_profile_avatar">user profile avatar</string>
+
+    <string name="lorem_ipsum">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla efficitur id risus id porttitor. Donec dictum ligula et nibh volutpat vulputate nec eu nisi. Nullam vitae iaculis magna. Sed vitae turpis et dui bibendum ultrices. Duis rutrum quis risus id rutrum. Etiam pretium gravida ultrices. Suspendisse potenti. Mauris dictum lacinia ligula semper scelerisque. Mauris sed quam nisi. Etiam at felis in neque imperdiet aliquet non eu justo. Sed sodales lorem tortor, non feugiat neque sollicitudin at. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Quisque faucibus sem in tortor auctor, at hendrerit enim euismod. Vivamus quis placerat est. In laoreet nulla ornare semper laoreet. Donec et accumsan turpis. Duis lacus nibh, blandit ut elementum a, auctor at lorem. Nunc ultrices sapien eget lacus luctus, eu placerat ante pellentesque. Phasellus vulputate, dolor eget sagittis imperdiet, augue nibh sodales mauris, a viverra massa mauris vel lacus. Etiam ornare massa diam, a lacinia enim bibendum et. Praesent enim tortor, venenatis in maximus sit amet, blandit ut risus. Pellentesque vitae venenatis leo, at vestibulum dui. Ut mi leo, convallis eu erat sed, blandit euismod tortor. Phasellus eu pulvinar nisi. Nulla vulputate ex in justo consequat, eget faucibus tortor rutrum. Integer vestibulum tellus mi, eleifend dapibus metus pellentesque ut. In vulputate hendrerit semper. Suspendisse potenti. Nam iaculis ex leo, sit amet lobortis lectus pellentesque vitae. Duis lacinia laoreet mauris. Etiam convallis lacus nulla, ac auctor tellus semper vel. Sed sed sem consequat, vulputate odio sit amet, efficitur mauris. Cras malesuada gravida cursus. Sed fringilla vehicula augue, vitae fringilla lectus facilisis eget. Mauris vitae sapien a nisl volutpat pretium. Suspendisse in nisl porttitor, tempus nisi id, lacinia mauris. Suspendisse mattis justo mauris, imperdiet faucibus urna sollicitudin id. In semper purus eu quam auctor consectetur. Nulla vitae suscipit elit. Donec dictum sodales tellus, euismod ultrices dolor aliquam sit amet. Vivamus vel erat dolor. Nam lobortis eget enim id porttitor. Sed sagittis ut ipsum id maximus. Praesent cursus ex elit, sit amet finibus nisl tincidunt quis. Praesent id sagittis augue. Nullam suscipit neque a convallis lacinia. Quisque consequat nibh eget elementum mollis. Nunc quis magna ut urna dictum elementum. Nam suscipit mauris et nisl consequat semper. Morbi feugiat gravida ex in semper. Vestibulum ligula enim, efficitur at est vitae, hendrerit venenatis magna. Sed ac aliquam ipsum, nec elementum metus. Quisque pharetra elit turpis, id tincidunt dolor imperdiet sed. Aliquam ultricies ipsum ac dui pretium, sed scelerisque nibh porttitor</string>
+    <string name="lorem_small">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla efficitur id risus id porttitor. Donec dictum ligula et nibh volutpat vulputate nec eu nisi</string>
+
+    <string name="username_prefix">\@%s</string>
+    <string name="cd_profile_background">profile background</string>
+    <string name="profile_about">О себе</string>
+    <string name="cd_author_avatar_default">idea details author profile image</string>
+    <string name="last_update">Последнее обновление</string>
+    <string name="status">Статус</string>
+
+    <string name="just_now">Только что</string>
+    <string name="minutes_later">%s минут назад</string>
+    <string name="hours_later">%s часов назад</string>
+    <string name="days_later">%s дней назад</string>
+
+    <string name="waiting_full_team">Идет набор в команду</string>
+    <string name="published">Опубликована</string>
+    <string name="ellipsize">...</string>
+
+
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/RepositoryModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/RepositoryModule.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/ApiRepositoryModule.kt
rename from app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/RepositoryModule.kt
rename to app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/ApiRepositoryModule.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/RepositoryModule.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/di/modules/ApiRepositoryModule.kt	(date 1647621419283)
@@ -2,13 +2,24 @@
 
 import com.github.bgrebennikov.devbuff.domain.Repository
 import com.github.bgrebennikov.devbuff.domain.RepositoryImpl
+import com.github.bgrebennikov.devbuff.domain.TokenServiceImpl
+import com.github.bgrebennikov.devbuff.domain.TokenServiceRepository
+import com.github.bgrebennikov.devbuff.domain.user.UserRemoteRepository
+import com.github.bgrebennikov.devbuff.domain.user.UserRemoteRepositoryImpl
 import dagger.Binds
 import dagger.Module
 
 @Module
-interface RepositoryModule {
+interface ApiRepositoryModule {
 
     @Binds
     fun bindRepository(impl: RepositoryImpl) : Repository
 
+    @Binds
+    fun bindUserRemoteRepository(impl : UserRemoteRepositoryImpl) : UserRemoteRepository
+
+    @Binds
+    fun bindTokenServiceRepository(impl: TokenServiceImpl) : TokenServiceRepository
+
+
 }
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/di/AppComponent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.di\n\nimport androidx.fragment.app.Fragment\nimport com.github.bgrebennikov.devbuff.di.modules.NetworkModule\nimport com.github.bgrebennikov.devbuff.di.modules.RepositoryModule\nimport com.github.bgrebennikov.devbuff.di.modules.ViewModelsModule\nimport com.github.bgrebennikov.devbuff.presentation.ui.MainActivity\nimport com.github.bgrebennikov.devbuff.presentation.ui.fragments.ExploreFragment\nimport dagger.Component\nimport javax.inject.Singleton\n\n@Singleton\n@Component(\n    modules = [\n        NetworkModule::class,\n        RepositoryModule::class,\n        ViewModelsModule::class\n    ]\n)\ninterface AppComponent {\n\n    fun inject(fragment: ExploreFragment)\n\n    fun inject(activity: MainActivity)\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/di/AppComponent.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/di/AppComponent.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/di/AppComponent.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/di/AppComponent.kt	(date 1647260653045)
@@ -1,11 +1,22 @@
 package com.github.bgrebennikov.devbuff.di
 
-import androidx.fragment.app.Fragment
+import android.app.Application
 import com.github.bgrebennikov.devbuff.di.modules.NetworkModule
-import com.github.bgrebennikov.devbuff.di.modules.RepositoryModule
+import com.github.bgrebennikov.devbuff.di.modules.ApiRepositoryModule
+import com.github.bgrebennikov.devbuff.di.modules.DataStoreModule
 import com.github.bgrebennikov.devbuff.di.modules.ViewModelsModule
+import com.github.bgrebennikov.devbuff.di.qualifiers.DataStorage
+import com.github.bgrebennikov.devbuff.domain.user.UserRemoteRepository
+import com.github.bgrebennikov.devbuff.domain.user.UserRemoteRepositoryImpl
+import com.github.bgrebennikov.devbuff.presentation.ui.GithubAuthActivity
 import com.github.bgrebennikov.devbuff.presentation.ui.MainActivity
+import com.github.bgrebennikov.devbuff.presentation.ui.SplashScreen
+import com.github.bgrebennikov.devbuff.presentation.ui.BaseActivity
+import com.github.bgrebennikov.devbuff.presentation.ui.fragments.guest.GuestExploreFragment
 import com.github.bgrebennikov.devbuff.presentation.ui.fragments.ExploreFragment
+import com.github.bgrebennikov.devbuff.presentation.ui.fragments.IdeaDetailsFragment
+import com.github.bgrebennikov.devbuff.presentation.ui.fragments.SettingsFragment
+import dagger.BindsInstance
 import dagger.Component
 import javax.inject.Singleton
 
@@ -13,14 +24,39 @@
 @Component(
     modules = [
         NetworkModule::class,
-        RepositoryModule::class,
-        ViewModelsModule::class
+        ApiRepositoryModule::class,
+        ViewModelsModule::class,
+        DataStoreModule::class
     ]
 )
 interface AppComponent {
 
     fun inject(fragment: ExploreFragment)
+    fun inject(fragment: GuestExploreFragment)
+    fun inject(fragment: SettingsFragment)
+    fun inject(fragment: IdeaDetailsFragment)
 
     fun inject(activity: MainActivity)
+    fun inject(activity: GithubAuthActivity)
+    fun inject(activity : SplashScreen)
+    fun inject(application: Application)
+    fun inject(activity: BaseActivity)
+
+    @Component.Builder
+    interface Builder {
+
+        @BindsInstance
+        fun application(application: Application): Builder
+
+        @BindsInstance
+        fun dataStorage(
+            @DataStorage dataStorageName: String
+        ): Builder
+
+
+
+        fun build(): AppComponent
+
+    }
 
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".presentation.ui.MainActivity\"\n    android:background=\"#f2f2f2\"\n    >\n\n    <com.google.android.material.appbar.AppBarLayout\n        android:id=\"@+id/appBarLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toTopOf=\"@+id/nav_container\"\n        >\n        <androidx.appcompat.widget.Toolbar\n            style=\"@style/ToolbarMainStyle\"\n            android:id=\"@+id/main_toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"?attr/actionBarSize\"\n            >\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:gravity=\"center_vertical\"\n                android:orientation=\"horizontal\"\n                >\n                <ImageView\n                    android:layout_width=\"0dp\"\n                    android:layout_height=\"wrap_content\"\n                    android:src=\"@drawable/ic_devbuff_logo\"\n                    android:layout_weight=\"1\"\n                    tools:ignore=\"ContentDescription\"\n                    />\n\n                <LinearLayout\n                    android:layout_width=\"0dp\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"horizontal\"\n                    android:layout_weight=\"2\"\n                    android:gravity=\"center|end\"\n                    android:paddingEnd=\"18dp\"\n                    tools:ignore=\"RtlSymmetry\">\n                    <ImageView\n                        android:layout_width=\"30dp\"\n                        android:layout_height=\"30dp\"\n                        android:src=\"@drawable/ic_bell\"\n                        android:scaleType=\"centerCrop\"\n                        android:contentDescription=\"@string/cd_notification\"\n                        android:clickable=\"true\"\n                        android:focusable=\"true\"\n                        android:foreground=\"?attr/selectableItemBackground\"\n                        />\n                </LinearLayout>\n\n            </LinearLayout>\n        </androidx.appcompat.widget.Toolbar>\n    </com.google.android.material.appbar.AppBarLayout>\n\n    <androidx.fragment.app.FragmentContainerView\n        android:id=\"@+id/nav_container\"\n        android:name=\"androidx.navigation.fragment.NavHostFragment\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"0dp\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/appBarLayout\"\n        app:layout_constraintBottom_toTopOf=\"@+id/bottom_navigation_view\"\n        app:defaultNavHost=\"true\"\n        app:navGraph=\"@navigation/nav_main\"\n        />\n\n    <androidx.cardview.widget.CardView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        android:layout_marginBottom=\"@dimen/margin_default\"\n        app:cardBackgroundColor=\"@color/white\"\n        app:cardCornerRadius=\"@dimen/corners_radius_default\"\n        >\n        <LinearLayout\n            android:id=\"@+id/gitLogin\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"horizontal\"\n            android:gravity=\"center_vertical\"\n            android:clickable=\"true\"\n            android:focusable=\"true\"\n            android:foreground=\"?attr/selectableItemBackground\"\n            android:padding=\"@dimen/padding_small\"\n            >\n            <ImageView\n                android:layout_width=\"32dp\"\n                android:layout_height=\"32dp\"\n                android:src=\"@drawable/ic_github_icon\"\n                android:adjustViewBounds=\"true\"\n                android:scaleType=\"centerCrop\"\n                android:contentDescription=\"@string/cd_github_icon\"\n                />\n\n            <TextView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"@string/sign_in_via_github\"\n                android:textColor=\"@color/black\"\n                android:layout_marginStart=\"@dimen/margin_small\"\n                />\n        </LinearLayout>\n    </androidx.cardview.widget.CardView>\n\n    <com.google.android.material.bottomnavigation.BottomNavigationView\n        android:visibility=\"gone\"\n        android:id=\"@+id/bottom_navigation_view\"\n        style=\"@style/BottomNavStyle\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:menu=\"@menu/user_menu\"\n        app:labelVisibilityMode=\"labeled\"\n        />\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1647520730850)
@@ -22,42 +22,22 @@
             android:id="@+id/main_toolbar"
             android:layout_width="match_parent"
             android:layout_height="?attr/actionBarSize"
+            android:elevation="0dp"
             >
-            <LinearLayout
+            <androidx.constraintlayout.widget.ConstraintLayout
                 android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:gravity="center_vertical"
-                android:orientation="horizontal"
+                android:layout_height="match_parent"
                 >
                 <ImageView
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
+                    app:layout_constraintTop_toTopOf="parent"
+                    app:layout_constraintStart_toStartOf="parent"
+                    android:layout_width="100dp"
+                    android:layout_height="0dp"
+                    app:layout_constraintDimensionRatio="0:1"
                     android:src="@drawable/ic_devbuff_logo"
-                    android:layout_weight="1"
                     tools:ignore="ContentDescription"
                     />
-
-                <LinearLayout
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:orientation="horizontal"
-                    android:layout_weight="2"
-                    android:gravity="center|end"
-                    android:paddingEnd="18dp"
-                    tools:ignore="RtlSymmetry">
-                    <ImageView
-                        android:layout_width="30dp"
-                        android:layout_height="30dp"
-                        android:src="@drawable/ic_bell"
-                        android:scaleType="centerCrop"
-                        android:contentDescription="@string/cd_notification"
-                        android:clickable="true"
-                        android:focusable="true"
-                        android:foreground="?attr/selectableItemBackground"
-                        />
-                </LinearLayout>
-
-            </LinearLayout>
+            </androidx.constraintlayout.widget.ConstraintLayout>
         </androidx.appcompat.widget.Toolbar>
     </com.google.android.material.appbar.AppBarLayout>
 
@@ -74,48 +54,9 @@
         app:navGraph="@navigation/nav_main"
         />
 
-    <androidx.cardview.widget.CardView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        android:layout_marginBottom="@dimen/margin_default"
-        app:cardBackgroundColor="@color/white"
-        app:cardCornerRadius="@dimen/corners_radius_default"
-        >
-        <LinearLayout
-            android:id="@+id/gitLogin"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal"
-            android:gravity="center_vertical"
-            android:clickable="true"
-            android:focusable="true"
-            android:foreground="?attr/selectableItemBackground"
-            android:padding="@dimen/padding_small"
-            >
-            <ImageView
-                android:layout_width="32dp"
-                android:layout_height="32dp"
-                android:src="@drawable/ic_github_icon"
-                android:adjustViewBounds="true"
-                android:scaleType="centerCrop"
-                android:contentDescription="@string/cd_github_icon"
-                />
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/sign_in_via_github"
-                android:textColor="@color/black"
-                android:layout_marginStart="@dimen/margin_small"
-                />
-        </LinearLayout>
-    </androidx.cardview.widget.CardView>
 
     <com.google.android.material.bottomnavigation.BottomNavigationView
-        android:visibility="gone"
+        android:visibility="visible"
         android:id="@+id/bottom_navigation_view"
         style="@style/BottomNavStyle"
         android:layout_width="0dp"
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
new file mode 100644
--- /dev/null	(date 1647011409906)
+++ b/app/src/main/res/values/styles.xml	(date 1647011409906)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <style name="BtnIdeaShowMore">
+        <item name="android:textAllCaps">false</item>
+        <item name="android:background">@drawable/bg_idea_more_btn</item>
+        <item name="android:clickable">true</item>
+        <item name="android:focusable">true</item>
+        <item name="android:foreground">?attr/selectableItemBackground</item>
+    </style>
+
+    <style name="TitleDefault">
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:textSize">32sp</item>
+        <item name="android:textStyle">bold</item>
+        <item name="android:textColor">@color/black</item>
+        <item name="android:layout_margin">@dimen/margin_default</item>
+    </style>
+
+    <style name="authorName">
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:textColor">@color/black</item>
+        <item name="android:textStyle">bold</item>
+        <item name="android:textSize">18sp</item>
+    </style>
+
+    <style name="HeaderSmall">
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:layout_marginTop">@dimen/margin_low</item>
+        <item name="android:textColor">@color/black</item>
+    </style>
+
+</resources>
\ No newline at end of file
Index: app/src/main/res/values-night/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\n    <!-- Base application theme. -->\n    <style name=\"Theme.DevBuff\" parent=\"Theme.MaterialComponents.DayNight.DarkActionBar\">\n        <!-- Primary brand color. -->\n        <item name=\"colorPrimary\">@color/purple_200</item>\n        <item name=\"colorPrimaryVariant\">@color/purple_700</item>\n        <item name=\"colorOnPrimary\">@color/black</item>\n        <!-- Secondary brand color. -->\n        <item name=\"colorSecondary\">@color/teal_200</item>\n        <item name=\"colorSecondaryVariant\">@color/teal_200</item>\n        <item name=\"colorOnSecondary\">@color/black</item>\n        <!-- Status bar color. -->\n        <item name=\"android:statusBarColor\" tools:targetApi=\"l\">?attr/colorPrimaryVariant</item>\n        <!-- Customize your theme here. -->\n    </style>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-night/themes.xml b/app/src/main/res/values-night/themes.xml
--- a/app/src/main/res/values-night/themes.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/values-night/themes.xml	(date 1647520846566)
@@ -1,6 +1,6 @@
 <resources xmlns:tools="http://schemas.android.com/tools">
     <!-- Base application theme. -->
-    <style name="Theme.DevBuff" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
+    <style name="Theme.DevBuff" parent="Theme.MaterialComponents.DayNight.NoActionBar">
         <!-- Primary brand color. -->
         <item name="colorPrimary">@color/purple_200</item>
         <item name="colorPrimaryVariant">@color/purple_700</item>
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/GetIdeaByIdUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/GetIdeaByIdUseCase.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/GetIdeaByIdUseCase.kt
new file mode 100644
--- /dev/null	(date 1647260074365)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/GetIdeaByIdUseCase.kt	(date 1647260074365)
@@ -0,0 +1,16 @@
+package com.github.bgrebennikov.devbuff.domain.useCases
+
+import com.github.bgrebennikov.devbuff.data.remote.models.explore.IdeaDetailsModel
+import com.github.bgrebennikov.devbuff.domain.Repository
+import com.github.bgrebennikov.devbuff.domain.user.UserRemoteRepository
+import javax.inject.Inject
+
+class GetIdeaByIdUseCase @Inject constructor(
+    private val repository: Repository
+) {
+
+    suspend operator fun invoke(_id: String) : IdeaDetailsModel{
+        return repository.getIdeaById(_id)
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/drawable/bg_profile_rounded.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/bg_profile_rounded.xml b/app/src/main/res/drawable/bg_profile_rounded.xml
new file mode 100644
--- /dev/null	(date 1646925320983)
+++ b/app/src/main/res/drawable/bg_profile_rounded.xml	(date 1646925320983)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle"
+    >
+
+    <corners android:radius="@dimen/corners_radius_large"/>
+    <solid android:color="@color/white"/>
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/base/BaseDiffUtilItemCallback.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.presentation.ui.adapters.base\n\nimport androidx.recyclerview.widget.DiffUtil\nimport com.github.bgrebennikov.devbuff.presentation.ui.adapters.explore.ListItem\n\nclass BaseDiffUtilItemCallback : DiffUtil.ItemCallback<ListItem>() {\n    override fun areItemsTheSame(oldItem: ListItem, newItem: ListItem): Boolean {\n        return oldItem.itemId == newItem.itemId\n    }\n\n    override fun areContentsTheSame(oldItem: ListItem, newItem: ListItem): Boolean {\n        return oldItem.equals(newItem)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/base/BaseDiffUtilItemCallback.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/base/BaseDiffUtilItemCallback.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/base/BaseDiffUtilItemCallback.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/presentation/ui/adapters/base/BaseDiffUtilItemCallback.kt	(date 1647437098526)
@@ -9,6 +9,12 @@
     }
 
     override fun areContentsTheSame(oldItem: ListItem, newItem: ListItem): Boolean {
-        return oldItem.equals(newItem)
+        return oldItem::class == newItem::class && oldItem.itemId == newItem.itemId
     }
+
+    override fun getChangePayload(oldItem: ListItem, newItem: ListItem): Any? {
+        return super.getChangePayload(oldItem, newItem)
+    }
+
+
 }
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/Repository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.domain\n\nimport com.github.bgrebennikov.devbuff.data.models.IdeaModel\nimport com.github.bgrebennikov.devbuff.data.models.IdeasResponse\n\ninterface Repository {\n\n    suspend fun getIdeas(page : Int) : List<IdeaModel>\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/Repository.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/Repository.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/Repository.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/Repository.kt	(date 1647259902832)
@@ -1,10 +1,15 @@
 package com.github.bgrebennikov.devbuff.domain
 
-import com.github.bgrebennikov.devbuff.data.models.IdeaModel
-import com.github.bgrebennikov.devbuff.data.models.IdeasResponse
+import com.github.bgrebennikov.devbuff.data.remote.models.auth.AuthConfig
+import com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel
+import com.github.bgrebennikov.devbuff.data.remote.models.explore.IdeaDetailsModel
 
 interface Repository {
 
-    suspend fun getIdeas(page : Int) : List<IdeaModel>
+    suspend fun authGithubUser(code: String) : AuthConfig
+
+    suspend fun getIdeas(page : Int) : List<SimpleIdeaModel>
+
+    suspend fun getIdeaById(_id : String) : IdeaDetailsModel
 
 }
\ No newline at end of file
Index: app/src/main/res/drawable-v24/ic_launcher_foreground.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:aapt=\"http://schemas.android.com/aapt\"\n    android:width=\"108dp\"\n    android:height=\"108dp\"\n    android:viewportWidth=\"108\"\n    android:viewportHeight=\"108\">\n    <path android:pathData=\"M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z\">\n        <aapt:attr name=\"android:fillColor\">\n            <gradient\n                android:endX=\"85.84757\"\n                android:endY=\"92.4963\"\n                android:startX=\"42.9492\"\n                android:startY=\"49.59793\"\n                android:type=\"linear\">\n                <item\n                    android:color=\"#44000000\"\n                    android:offset=\"0.0\" />\n                <item\n                    android:color=\"#00000000\"\n                    android:offset=\"1.0\" />\n            </gradient>\n        </aapt:attr>\n    </path>\n    <path\n        android:fillColor=\"#FFFFFF\"\n        android:fillType=\"nonZero\"\n        android:pathData=\"M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z\"\n        android:strokeWidth=\"1\"\n        android:strokeColor=\"#00000000\" />\n</vector>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable-v24/ic_launcher_foreground.xml b/app/src/main/res/drawable-v24/ic_launcher_foreground.xml
--- a/app/src/main/res/drawable-v24/ic_launcher_foreground.xml	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/res/drawable-v24/ic_launcher_foreground.xml	(date 1646836738859)
@@ -4,27 +4,25 @@
     android:height="108dp"
     android:viewportWidth="108"
     android:viewportHeight="108">
-    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
+    <path
+        android:fillColor="#FFFFFF"
+        android:fillType="nonZero"
+        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
+        android:strokeWidth="1"
+        android:strokeColor="#00000000" />
+
+    <path
+        android:pathData="M42.0385,22.8487L8.5664,37.3658C7.5521,37.678 6.5866,37.5512 5.6698,36.9853C4.753,36.4195 4.1581,35.6097 3.885,34.5561C3.6119,33.5024 3.7387,32.4975 4.2654,31.5414C4.792,30.5853 5.5625,29.9512 6.5768,29.639L40.0489,15.1219C41.1022,14.8487 42.0775,14.9853 42.9748,15.5317C43.872,16.078 44.467,16.8878 44.7596,17.9609C45.0521,19.0341 44.9254,20.0487 44.3792,21.0048C43.833,21.9609 43.0528,22.5756 42.0385,22.8487ZM38.2934,11.6097L4.8213,26.1268C3.807,26.439 2.8414,26.3122 1.9247,25.7463C1.0079,25.1805 0.413,24.3707 0.1399,23.317C-0.1332,22.2634 -0.0064,21.2585 0.5202,20.3024C1.0469,19.3463 1.8174,18.7317 2.8317,18.4585L36.3038,3.8829C37.3571,3.6097 38.3324,3.7463 39.2296,4.2926C40.1269,4.839 40.7218,5.6487 41.0144,6.7219C41.307,7.7951 41.1802,8.8097 40.6341,9.7658C40.0879,10.7219 39.3077,11.3365 38.2934,11.6097ZM17.6952,7.8634L8.5664,11.1414C7.5521,11.4536 6.5866,11.3365 5.6698,10.7902C4.753,10.2439 4.1581,9.4341 3.885,8.3609C3.6119,7.2878 3.7387,6.2731 4.2654,5.317C4.792,4.3609 5.5625,3.7463 6.5768,3.4731L15.7641,0.1365C16.7784,-0.1366 17.7439,0 18.6607,0.5463C19.5775,1.0926 20.1724,1.9024 20.4455,2.9756C20.7186,4.0487 20.5918,5.0634 20.0651,6.0195C19.5385,6.9756 18.7485,7.5902 17.6952,7.8634ZM16.4663,37.8926C16.8564,37.5414 17.3051,37.2878 17.8122,37.1317L36.3038,30.1073C37.3571,29.8341 38.3324,29.9707 39.2296,30.517C40.1269,31.0634 40.7218,31.8731 41.0144,32.9463C41.307,34.0195 41.1802,35.0341 40.6341,35.9902C40.0879,36.9463 39.3077,37.5609 38.2934,37.8341L22.4936,43.8634C22.4546,44.3707 22.4351,44.7414 22.4351,44.9756H26.1802C27.2335,44.9756 28.1211,45.3463 28.8428,46.0878C29.5645,46.8292 29.9254,47.717 29.9254,48.7512C29.9254,49.7853 29.5645,50.6634 28.8428,51.3853C28.1211,52.1073 27.2335,52.4683 26.1802,52.4683H18.69C18.4559,52.4683 18.2218,52.4487 17.9878,52.4097C16.0762,52.2146 14.467,51.4048 13.1601,49.9805C11.8532,48.5561 11.1997,46.8878 11.1997,44.9756C11.1997,43.3365 11.6874,41.8634 12.6627,40.5561C13.638,39.2487 14.9058,38.3609 16.4663,37.8926ZM22.4351,59.9609C20.3675,59.9609 18.6022,59.6 17.1393,58.878C15.6763,58.1561 14.9449,57.2683 14.9449,56.2146H29.9254C29.9254,57.2683 29.1939,58.1561 27.7309,58.878C26.268,59.6 24.5027,59.9609 22.4351,59.9609Z">
         <aapt:attr name="android:fillColor">
             <gradient
-                android:endX="85.84757"
-                android:endY="92.4963"
-                android:startX="42.9492"
-                android:startY="49.59793"
+                android:startY="59.9609"
+                android:startX="22.4563"
+                android:endY="3.57395E-5"
+                android:endX="22.4563"
                 android:type="linear">
-                <item
-                    android:color="#44000000"
-                    android:offset="0.0" />
-                <item
-                    android:color="#00000000"
-                    android:offset="1.0" />
+                <item android:offset="0" android:color="#FF007CF0"/>
+                <item android:offset="1" android:color="#FF00DFD8"/>
             </gradient>
         </aapt:attr>
     </path>
-    <path
-        android:fillColor="#FFFFFF"
-        android:fillType="nonZero"
-        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
-        android:strokeWidth="1"
-        android:strokeColor="#00000000" />
 </vector>
\ No newline at end of file
Index: app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/GetIdeasUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.github.bgrebennikov.devbuff.domain.useCases\n\nimport com.github.bgrebennikov.devbuff.data.models.IdeaModel\nimport com.github.bgrebennikov.devbuff.data.models.IdeasResponse\nimport com.github.bgrebennikov.devbuff.domain.Repository\nimport javax.inject.Inject\n\nclass GetIdeasUseCase @Inject constructor(\n    private val repository: Repository\n) {\n    suspend operator fun invoke(page : Int) : List<IdeaModel>{\n        return repository.getIdeas(1)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/GetIdeasUseCase.kt b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/GetIdeasUseCase.kt
--- a/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/GetIdeasUseCase.kt	(revision eb25cb6a472392ca8b615c8e832156b362b76d11)
+++ b/app/src/main/java/com/github/bgrebennikov/devbuff/domain/useCases/GetIdeasUseCase.kt	(date 1647008854130)
@@ -1,14 +1,13 @@
 package com.github.bgrebennikov.devbuff.domain.useCases
 
-import com.github.bgrebennikov.devbuff.data.models.IdeaModel
-import com.github.bgrebennikov.devbuff.data.models.IdeasResponse
+import com.github.bgrebennikov.devbuff.data.local.SimpleIdeaModel
 import com.github.bgrebennikov.devbuff.domain.Repository
 import javax.inject.Inject
 
 class GetIdeasUseCase @Inject constructor(
     private val repository: Repository
 ) {
-    suspend operator fun invoke(page : Int) : List<IdeaModel>{
+    suspend operator fun invoke(page : Int) : List<SimpleIdeaModel>{
         return repository.getIdeas(1)
     }
 }
\ No newline at end of file
